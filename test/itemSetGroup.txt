
allSymbols:
BEGIN
END
EPSILON
S
ExtDefList
ExtDef
Specifier
ExtDecList
FunDec
CompSt
VarDec
TYPE
StructSpecifier
OptTag
Tag
VarList
ParamDec
StmtList
Stmt
DefList
Def
DecList
Dec
Exp
Args
int
float
id
=
relop
+
-
*
/
logop
!
bitop
(
)
[
]
{
}
if
else
while
return
struct
:
.
,
;
num

productions:

[BEGIN --> ·S ,END]

[S --> ·ExtDefList ,END]

[ExtDefList --> ·ExtDef ExtDefList ,END]

[ExtDefList --> ·EPSILON ,END]

[ExtDef --> ·Specifier ExtDecList ; ,END]

[ExtDef --> ·Specifier ; ,END]

[ExtDef --> ·Specifier FunDec CompSt ,END]

[ExtDecList --> ·VarDec ,END]

[ExtDecList --> ·VarDec , ExtDecList ,END]

[Specifier --> ·TYPE ,END]

[TYPE --> ·int ,END]

[TYPE --> ·float ,END]

[Specifier --> ·StructSpecifier ,END]

[StructSpecifier --> ·struct OptTag { DefList } ,END]

[StructSpecifier --> ·struct Tag ,END]

[OptTag --> ·id ,END]

[OptTag --> ·EPSILON ,END]

[Tag --> ·id ,END]

[VarDec --> ·id ,END]

[VarDec --> ·VarDec [ int ] ,END]

[FunDec --> ·id ( VarList ) ,END]

[FunDec --> ·id ( ) ,END]

[VarList --> ·ParamDec , VarList ,END]

[VarList --> ·ParamDec ,END]

[ParamDec --> ·Specifier VarDec ,END]

[CompSt --> ·{ DefList StmtList } ,END]

[StmtList --> ·Stmt StmtList ,END]

[StmtList --> ·EPSILON ,END]

[Stmt --> ·Exp ; ,END]

[Stmt --> ·CompSt ,END]

[Stmt --> ·return Exp ; ,END]

[Stmt --> ·if ( Exp ) Stmt ,END]

[Stmt --> ·if ( Exp ) Stmt else Stmt ,END]

[Stmt --> ·while ( Exp ) Stmt ,END]

[DefList --> ·Def DefList ,END]

[DefList --> ·EPSILON ,END]

[Def --> ·Specifier DecList ; ,END]

[DecList --> ·Dec ,END]

[DecList --> ·Dec , DecList ,END]

[Dec --> ·VarDec ,END]

[Dec --> ·VarDec = Exp ,END]

[Exp --> ·Exp = Exp ,END]

[Exp --> ·Exp relop Exp ,END]

[Exp --> ·Exp + Exp ,END]

[Exp --> ·Exp - Exp ,END]

[Exp --> ·Exp * Exp ,END]

[Exp --> ·Exp / Exp ,END]

[Exp --> ·Exp logop Exp ,END]

[Exp --> ·Exp bitop Exp ,END]

[Exp --> ·( Exp ) ,END]

[Exp --> ·- Exp ,END]

[Exp --> ·! Exp ,END]

[Exp --> ·id ( Args ) ,END]

[Exp --> ·id ( ) ,END]

[Exp --> ·Exp [ Exp ] ,END]

[Exp --> ·Exp . id ,END]

[Exp --> ·id ,END]

[Exp --> ·int ,END]

[Exp --> ·float ,END]

[Args --> ·Exp , Args ,END]

[Args --> ·Exp ,END]

符号BEGIN 的first（）：EPSILON int float struct
符号END 的first（）：END
符号EPSILON 的first（）：EPSILON
符号S 的first（）：EPSILON int float struct
符号ExtDefList 的first（）：EPSILON int float struct
符号ExtDef 的first（）：int float struct
符号Specifier 的first（）：int float struct
符号ExtDecList 的first（）：id
符号FunDec 的first（）：id
符号CompSt 的first（）：{
符号VarDec 的first（）：id
符号TYPE 的first（）：int float
符号StructSpecifier 的first（）：struct
符号OptTag 的first（）：EPSILON id
符号Tag 的first（）：id
符号VarList 的first（）：int float struct
符号ParamDec 的first（）：int float struct
符号StmtList 的first（）：EPSILON int float id - ! ( { if while return
符号Stmt 的first（）：int float id - ! ( { if while return
符号DefList 的first（）：EPSILON int float struct
符号Def 的first（）：int float struct
符号DecList 的first（）：id
符号Dec 的first（）：id
符号Exp 的first（）：int float id - ! (
符号Args 的first（）：int float id - ! (
符号int 的first（）：int
符号float 的first（）：float
符号id 的first（）：id
符号= 的first（）：=
符号relop 的first（）：relop
符号+ 的first（）：+
符号- 的first（）：-
符号* 的first（）：*
符号/ 的first（）：/
符号logop 的first（）：logop
符号! 的first（）：!
符号bitop 的first（）：bitop
符号( 的first（）：(
符号) 的first（）：)
符号[ 的first（）：[
符号] 的first（）：]
符号{ 的first（）：{
符号} 的first（）：}
符号if 的first（）：if
符号else 的first（）：else
符号while 的first（）：while
符号return 的first（）：return
符号struct 的first（）：struct
符号: 的first（）：:
符号. 的first（）：.
符号, 的first（）：,
符号; 的first（）：;
符号num 的first（）：num

符号BEGIN 的follow（）：END
符号END 的follow（）：
符号EPSILON 的follow（）：
符号S 的follow（）：END
符号ExtDefList 的follow（）：END
符号ExtDef 的follow（）：END int float struct
符号Specifier 的follow（）：id ;
符号ExtDecList 的follow（）：;
符号FunDec 的follow（）：{
符号CompSt 的follow（）：END int float id - ! ( { } if else while return struct
符号VarDec 的follow（）：= ) [ , ;
符号TYPE 的follow（）：id ;
符号StructSpecifier 的follow（）：id ;
符号OptTag 的follow（）：{
符号Tag 的follow（）：id ;
符号VarList 的follow（）：)
符号ParamDec 的follow（）：) ,
符号StmtList 的follow（）：}
符号Stmt 的follow（）：int float id - ! ( { } if else while return
符号DefList 的follow（）：int float id - ! ( { } if while return
符号Def 的follow（）：int float id - ! ( { } if while return struct
符号DecList 的follow（）：;
符号Dec 的follow（）：, ;
符号Exp 的follow（）：= relop + - * / logop bitop ) [ ] . , ;
符号Args 的follow（）：)
符号int 的follow（）：
符号float 的follow（）：
符号id 的follow（）：
符号= 的follow（）：
符号relop 的follow（）：
符号+ 的follow（）：
符号- 的follow（）：
符号* 的follow（）：
符号/ 的follow（）：
符号logop 的follow（）：
符号! 的follow（）：
符号bitop 的follow（）：
符号( 的follow（）：
符号) 的follow（）：
符号[ 的follow（）：
符号] 的follow（）：
符号{ 的follow（）：
符号} 的follow（）：
符号if 的follow（）：
符号else 的follow（）：
符号while 的follow（）：
符号return 的follow（）：
符号struct 的follow（）：
符号: 的follow（）：
符号. 的follow（）：
符号, 的follow（）：
符号; 的follow（）：
符号num 的follow（）：
closure后:
----------------------
项目集I0
大小：28

[BEGIN --> ·S ,END]
[S --> ·ExtDefList ,END]
[ExtDefList --> ·ExtDef ExtDefList ,END]
[ExtDefList --> ·EPSILON ,END]
[ExtDef --> ·Specifier ExtDecList ; ,END]
[ExtDef --> ·Specifier ExtDecList ; ,int]
[ExtDef --> ·Specifier ExtDecList ; ,float]
[ExtDef --> ·Specifier ExtDecList ; ,struct]
[ExtDef --> ·Specifier ; ,END]
[ExtDef --> ·Specifier ; ,int]
[ExtDef --> ·Specifier ; ,float]
[ExtDef --> ·Specifier ; ,struct]
[ExtDef --> ·Specifier FunDec CompSt ,END]
[ExtDef --> ·Specifier FunDec CompSt ,int]
[ExtDef --> ·Specifier FunDec CompSt ,float]
[ExtDef --> ·Specifier FunDec CompSt ,struct]
[Specifier --> ·TYPE ,id]
[Specifier --> ·StructSpecifier ,id]
[Specifier --> ·TYPE ,;]
[Specifier --> ·StructSpecifier ,;]
[TYPE --> ·int ,id]
[TYPE --> ·float ,id]
[StructSpecifier --> ·struct OptTag { DefList } ,id]
[StructSpecifier --> ·struct Tag ,id]
[TYPE --> ·int ,;]
[TYPE --> ·float ,;]
[StructSpecifier --> ·struct OptTag { DefList } ,;]
[StructSpecifier --> ·struct Tag ,;]
----------------------
项目集I1
大小：1

[ExtDefList --> EPSILON · ,END]
----------------------
项目集I2
大小：1

[BEGIN --> S · ,END]
----------------------
项目集I3
大小：1

[S --> ExtDefList · ,END]
----------------------
项目集I4
大小：27

[ExtDefList --> ExtDef ·ExtDefList ,END]
[ExtDefList --> ·ExtDef ExtDefList ,END]
[ExtDefList --> ·EPSILON ,END]
[ExtDef --> ·Specifier ExtDecList ; ,END]
[ExtDef --> ·Specifier ExtDecList ; ,int]
[ExtDef --> ·Specifier ExtDecList ; ,float]
[ExtDef --> ·Specifier ExtDecList ; ,struct]
[ExtDef --> ·Specifier ; ,END]
[ExtDef --> ·Specifier ; ,int]
[ExtDef --> ·Specifier ; ,float]
[ExtDef --> ·Specifier ; ,struct]
[ExtDef --> ·Specifier FunDec CompSt ,END]
[ExtDef --> ·Specifier FunDec CompSt ,int]
[ExtDef --> ·Specifier FunDec CompSt ,float]
[ExtDef --> ·Specifier FunDec CompSt ,struct]
[Specifier --> ·TYPE ,id]
[Specifier --> ·StructSpecifier ,id]
[Specifier --> ·TYPE ,;]
[Specifier --> ·StructSpecifier ,;]
[TYPE --> ·int ,id]
[TYPE --> ·float ,id]
[StructSpecifier --> ·struct OptTag { DefList } ,id]
[StructSpecifier --> ·struct Tag ,id]
[TYPE --> ·int ,;]
[TYPE --> ·float ,;]
[StructSpecifier --> ·struct OptTag { DefList } ,;]
[StructSpecifier --> ·struct Tag ,;]
----------------------
项目集I5
大小：22

[ExtDef --> Specifier ·ExtDecList ; ,END]
[ExtDef --> Specifier ·ExtDecList ; ,int]
[ExtDef --> Specifier ·ExtDecList ; ,float]
[ExtDef --> Specifier ·ExtDecList ; ,struct]
[ExtDef --> Specifier ·; ,END]
[ExtDef --> Specifier ·; ,int]
[ExtDef --> Specifier ·; ,float]
[ExtDef --> Specifier ·; ,struct]
[ExtDef --> Specifier ·FunDec CompSt ,END]
[ExtDef --> Specifier ·FunDec CompSt ,int]
[ExtDef --> Specifier ·FunDec CompSt ,float]
[ExtDef --> Specifier ·FunDec CompSt ,struct]
[ExtDecList --> ·VarDec ,;]
[ExtDecList --> ·VarDec , ExtDecList ,;]
[FunDec --> ·id ( VarList ) ,{]
[FunDec --> ·id ( ) ,{]
[VarDec --> ·id ,;]
[VarDec --> ·VarDec [ int ] ,;]
[VarDec --> ·id ,,]
[VarDec --> ·VarDec [ int ] ,,]
[VarDec --> ·id ,[]
[VarDec --> ·VarDec [ int ] ,[]
----------------------
项目集I6
大小：2

[Specifier --> TYPE · ,id]
[Specifier --> TYPE · ,;]
----------------------
项目集I7
大小：2

[Specifier --> StructSpecifier · ,id]
[Specifier --> StructSpecifier · ,;]
----------------------
项目集I8
大小：2

[TYPE --> int · ,id]
[TYPE --> int · ,;]
----------------------
项目集I9
大小：2

[TYPE --> float · ,id]
[TYPE --> float · ,;]
----------------------
项目集I10
大小：8

[StructSpecifier --> struct ·OptTag { DefList } ,id]
[StructSpecifier --> struct ·Tag ,id]
[StructSpecifier --> struct ·OptTag { DefList } ,;]
[StructSpecifier --> struct ·Tag ,;]
[OptTag --> ·id ,{]
[OptTag --> ·EPSILON ,{]
[Tag --> ·id ,id]
[Tag --> ·id ,;]
----------------------
项目集I11
大小：1

[ExtDefList --> ExtDef ExtDefList · ,END]
----------------------
项目集I12
大小：4

[ExtDef --> Specifier ExtDecList ·; ,END]
[ExtDef --> Specifier ExtDecList ·; ,int]
[ExtDef --> Specifier ExtDecList ·; ,float]
[ExtDef --> Specifier ExtDecList ·; ,struct]
----------------------
项目集I13
大小：8

[ExtDef --> Specifier FunDec ·CompSt ,END]
[ExtDef --> Specifier FunDec ·CompSt ,int]
[ExtDef --> Specifier FunDec ·CompSt ,float]
[ExtDef --> Specifier FunDec ·CompSt ,struct]
[CompSt --> ·{ DefList StmtList } ,END]
[CompSt --> ·{ DefList StmtList } ,int]
[CompSt --> ·{ DefList StmtList } ,float]
[CompSt --> ·{ DefList StmtList } ,struct]
----------------------
项目集I14
大小：5

[ExtDecList --> VarDec · ,;]
[ExtDecList --> VarDec ·, ExtDecList ,;]
[VarDec --> VarDec ·[ int ] ,;]
[VarDec --> VarDec ·[ int ] ,,]
[VarDec --> VarDec ·[ int ] ,[]
----------------------
项目集I15
大小：5

[FunDec --> id ·( VarList ) ,{]
[FunDec --> id ·( ) ,{]
[VarDec --> id · ,;]
[VarDec --> id · ,,]
[VarDec --> id · ,[]
----------------------
项目集I16
大小：4

[ExtDef --> Specifier ; · ,END]
[ExtDef --> Specifier ; · ,int]
[ExtDef --> Specifier ; · ,float]
[ExtDef --> Specifier ; · ,struct]
----------------------
项目集I17
大小：1

[OptTag --> EPSILON · ,{]
----------------------
项目集I18
大小：2

[StructSpecifier --> struct OptTag ·{ DefList } ,id]
[StructSpecifier --> struct OptTag ·{ DefList } ,;]
----------------------
项目集I19
大小：2

[StructSpecifier --> struct Tag · ,id]
[StructSpecifier --> struct Tag · ,;]
----------------------
项目集I20
大小：3

[OptTag --> id · ,{]
[Tag --> id · ,id]
[Tag --> id · ,;]
----------------------
项目集I21
大小：4

[ExtDef --> Specifier ExtDecList ; · ,END]
[ExtDef --> Specifier ExtDecList ; · ,int]
[ExtDef --> Specifier ExtDecList ; · ,float]
[ExtDef --> Specifier ExtDecList ; · ,struct]
----------------------
项目集I22
大小：4

[ExtDef --> Specifier FunDec CompSt · ,END]
[ExtDef --> Specifier FunDec CompSt · ,int]
[ExtDef --> Specifier FunDec CompSt · ,float]
[ExtDef --> Specifier FunDec CompSt · ,struct]
----------------------
项目集I23
大小：44

[CompSt --> { ·DefList StmtList } ,END]
[CompSt --> { ·DefList StmtList } ,int]
[CompSt --> { ·DefList StmtList } ,float]
[CompSt --> { ·DefList StmtList } ,struct]
[DefList --> ·Def DefList ,int]
[DefList --> ·Def DefList ,float]
[DefList --> ·Def DefList ,id]
[DefList --> ·Def DefList ,-]
[DefList --> ·Def DefList ,!]
[DefList --> ·Def DefList ,(]
[DefList --> ·Def DefList ,{]
[DefList --> ·Def DefList ,}]
[DefList --> ·Def DefList ,if]
[DefList --> ·Def DefList ,while]
[DefList --> ·Def DefList ,return]
[DefList --> ·EPSILON ,int]
[DefList --> ·EPSILON ,float]
[DefList --> ·EPSILON ,id]
[DefList --> ·EPSILON ,-]
[DefList --> ·EPSILON ,!]
[DefList --> ·EPSILON ,(]
[DefList --> ·EPSILON ,{]
[DefList --> ·EPSILON ,}]
[DefList --> ·EPSILON ,if]
[DefList --> ·EPSILON ,while]
[DefList --> ·EPSILON ,return]
[Def --> ·Specifier DecList ; ,int]
[Def --> ·Specifier DecList ; ,float]
[Def --> ·Specifier DecList ; ,struct]
[Def --> ·Specifier DecList ; ,id]
[Def --> ·Specifier DecList ; ,-]
[Def --> ·Specifier DecList ; ,!]
[Def --> ·Specifier DecList ; ,(]
[Def --> ·Specifier DecList ; ,{]
[Def --> ·Specifier DecList ; ,}]
[Def --> ·Specifier DecList ; ,if]
[Def --> ·Specifier DecList ; ,while]
[Def --> ·Specifier DecList ; ,return]
[Specifier --> ·TYPE ,id]
[Specifier --> ·StructSpecifier ,id]
[TYPE --> ·int ,id]
[TYPE --> ·float ,id]
[StructSpecifier --> ·struct OptTag { DefList } ,id]
[StructSpecifier --> ·struct Tag ,id]
----------------------
项目集I24
大小：3

[VarDec --> VarDec [ ·int ] ,;]
[VarDec --> VarDec [ ·int ] ,,]
[VarDec --> VarDec [ ·int ] ,[]
----------------------
项目集I25
大小：9

[ExtDecList --> VarDec , ·ExtDecList ,;]
[ExtDecList --> ·VarDec ,;]
[ExtDecList --> ·VarDec , ExtDecList ,;]
[VarDec --> ·id ,;]
[VarDec --> ·VarDec [ int ] ,;]
[VarDec --> ·id ,,]
[VarDec --> ·VarDec [ int ] ,,]
[VarDec --> ·id ,[]
[VarDec --> ·VarDec [ int ] ,[]
----------------------
项目集I26
大小：12

[FunDec --> id ( ·VarList ) ,{]
[FunDec --> id ( ·) ,{]
[VarList --> ·ParamDec , VarList ,)]
[VarList --> ·ParamDec ,)]
[ParamDec --> ·Specifier VarDec ,,]
[ParamDec --> ·Specifier VarDec ,)]
[Specifier --> ·TYPE ,id]
[Specifier --> ·StructSpecifier ,id]
[TYPE --> ·int ,id]
[TYPE --> ·float ,id]
[StructSpecifier --> ·struct OptTag { DefList } ,id]
[StructSpecifier --> ·struct Tag ,id]
----------------------
项目集I27
大小：14

[StructSpecifier --> struct OptTag { ·DefList } ,id]
[StructSpecifier --> struct OptTag { ·DefList } ,;]
[DefList --> ·Def DefList ,}]
[DefList --> ·EPSILON ,}]
[Def --> ·Specifier DecList ; ,int]
[Def --> ·Specifier DecList ; ,float]
[Def --> ·Specifier DecList ; ,}]
[Def --> ·Specifier DecList ; ,struct]
[Specifier --> ·TYPE ,id]
[Specifier --> ·StructSpecifier ,id]
[TYPE --> ·int ,id]
[TYPE --> ·float ,id]
[StructSpecifier --> ·struct OptTag { DefList } ,id]
[StructSpecifier --> ·struct Tag ,id]
----------------------
项目集I28
大小：11

[DefList --> EPSILON · ,int]
[DefList --> EPSILON · ,float]
[DefList --> EPSILON · ,id]
[DefList --> EPSILON · ,-]
[DefList --> EPSILON · ,!]
[DefList --> EPSILON · ,(]
[DefList --> EPSILON · ,{]
[DefList --> EPSILON · ,}]
[DefList --> EPSILON · ,if]
[DefList --> EPSILON · ,while]
[DefList --> EPSILON · ,return]
----------------------
项目集I29
大小：26

[Def --> Specifier ·DecList ; ,int]
[Def --> Specifier ·DecList ; ,float]
[Def --> Specifier ·DecList ; ,struct]
[Def --> Specifier ·DecList ; ,id]
[Def --> Specifier ·DecList ; ,-]
[Def --> Specifier ·DecList ; ,!]
[Def --> Specifier ·DecList ; ,(]
[Def --> Specifier ·DecList ; ,{]
[Def --> Specifier ·DecList ; ,}]
[Def --> Specifier ·DecList ; ,if]
[Def --> Specifier ·DecList ; ,while]
[Def --> Specifier ·DecList ; ,return]
[DecList --> ·Dec ,;]
[DecList --> ·Dec , DecList ,;]
[Dec --> ·VarDec ,;]
[Dec --> ·VarDec = Exp ,;]
[Dec --> ·VarDec ,,]
[Dec --> ·VarDec = Exp ,,]
[VarDec --> ·id ,;]
[VarDec --> ·VarDec [ int ] ,;]
[VarDec --> ·id ,=]
[VarDec --> ·VarDec [ int ] ,=]
[VarDec --> ·id ,,]
[VarDec --> ·VarDec [ int ] ,,]
[VarDec --> ·id ,[]
[VarDec --> ·VarDec [ int ] ,[]
----------------------
项目集I30
大小：1

[Specifier --> TYPE · ,id]
----------------------
项目集I31
大小：1

[Specifier --> StructSpecifier · ,id]
----------------------
项目集I32
大小：281

[CompSt --> { DefList ·StmtList } ,END]
[CompSt --> { DefList ·StmtList } ,int]
[CompSt --> { DefList ·StmtList } ,float]
[CompSt --> { DefList ·StmtList } ,struct]
[StmtList --> ·Stmt StmtList ,}]
[StmtList --> ·EPSILON ,}]
[Stmt --> ·Exp ; ,int]
[Stmt --> ·Exp ; ,float]
[Stmt --> ·Exp ; ,id]
[Stmt --> ·Exp ; ,-]
[Stmt --> ·Exp ; ,!]
[Stmt --> ·Exp ; ,(]
[Stmt --> ·Exp ; ,{]
[Stmt --> ·Exp ; ,}]
[Stmt --> ·Exp ; ,if]
[Stmt --> ·Exp ; ,while]
[Stmt --> ·Exp ; ,return]
[Stmt --> ·CompSt ,int]
[Stmt --> ·CompSt ,float]
[Stmt --> ·CompSt ,id]
[Stmt --> ·CompSt ,-]
[Stmt --> ·CompSt ,!]
[Stmt --> ·CompSt ,(]
[Stmt --> ·CompSt ,{]
[Stmt --> ·CompSt ,}]
[Stmt --> ·CompSt ,if]
[Stmt --> ·CompSt ,while]
[Stmt --> ·CompSt ,return]
[Stmt --> ·return Exp ; ,int]
[Stmt --> ·return Exp ; ,float]
[Stmt --> ·return Exp ; ,id]
[Stmt --> ·return Exp ; ,-]
[Stmt --> ·return Exp ; ,!]
[Stmt --> ·return Exp ; ,(]
[Stmt --> ·return Exp ; ,{]
[Stmt --> ·return Exp ; ,}]
[Stmt --> ·return Exp ; ,if]
[Stmt --> ·return Exp ; ,while]
[Stmt --> ·return Exp ; ,return]
[Stmt --> ·if ( Exp ) Stmt ,int]
[Stmt --> ·if ( Exp ) Stmt ,float]
[Stmt --> ·if ( Exp ) Stmt ,id]
[Stmt --> ·if ( Exp ) Stmt ,-]
[Stmt --> ·if ( Exp ) Stmt ,!]
[Stmt --> ·if ( Exp ) Stmt ,(]
[Stmt --> ·if ( Exp ) Stmt ,{]
[Stmt --> ·if ( Exp ) Stmt ,}]
[Stmt --> ·if ( Exp ) Stmt ,if]
[Stmt --> ·if ( Exp ) Stmt ,while]
[Stmt --> ·if ( Exp ) Stmt ,return]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,int]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,float]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,id]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,-]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,!]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,(]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,{]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,}]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,if]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,while]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,return]
[Stmt --> ·while ( Exp ) Stmt ,int]
[Stmt --> ·while ( Exp ) Stmt ,float]
[Stmt --> ·while ( Exp ) Stmt ,id]
[Stmt --> ·while ( Exp ) Stmt ,-]
[Stmt --> ·while ( Exp ) Stmt ,!]
[Stmt --> ·while ( Exp ) Stmt ,(]
[Stmt --> ·while ( Exp ) Stmt ,{]
[Stmt --> ·while ( Exp ) Stmt ,}]
[Stmt --> ·while ( Exp ) Stmt ,if]
[Stmt --> ·while ( Exp ) Stmt ,while]
[Stmt --> ·while ( Exp ) Stmt ,return]
[Exp --> ·Exp = Exp ,;]
[Exp --> ·Exp relop Exp ,;]
[Exp --> ·Exp + Exp ,;]
[Exp --> ·Exp - Exp ,;]
[Exp --> ·Exp * Exp ,;]
[Exp --> ·Exp / Exp ,;]
[Exp --> ·Exp logop Exp ,;]
[Exp --> ·Exp bitop Exp ,;]
[Exp --> ·( Exp ) ,;]
[Exp --> ·- Exp ,;]
[Exp --> ·! Exp ,;]
[Exp --> ·id ( Args ) ,;]
[Exp --> ·id ( ) ,;]
[Exp --> ·Exp [ Exp ] ,;]
[Exp --> ·Exp . id ,;]
[Exp --> ·id ,;]
[Exp --> ·int ,;]
[Exp --> ·float ,;]
[CompSt --> ·{ DefList StmtList } ,int]
[CompSt --> ·{ DefList StmtList } ,float]
[CompSt --> ·{ DefList StmtList } ,id]
[CompSt --> ·{ DefList StmtList } ,-]
[CompSt --> ·{ DefList StmtList } ,!]
[CompSt --> ·{ DefList StmtList } ,(]
[CompSt --> ·{ DefList StmtList } ,{]
[CompSt --> ·{ DefList StmtList } ,}]
[CompSt --> ·{ DefList StmtList } ,if]
[CompSt --> ·{ DefList StmtList } ,while]
[CompSt --> ·{ DefList StmtList } ,return]
[Exp --> ·Exp = Exp ,=]
[Exp --> ·Exp relop Exp ,=]
[Exp --> ·Exp + Exp ,=]
[Exp --> ·Exp - Exp ,=]
[Exp --> ·Exp * Exp ,=]
[Exp --> ·Exp / Exp ,=]
[Exp --> ·Exp logop Exp ,=]
[Exp --> ·Exp bitop Exp ,=]
[Exp --> ·( Exp ) ,=]
[Exp --> ·- Exp ,=]
[Exp --> ·! Exp ,=]
[Exp --> ·id ( Args ) ,=]
[Exp --> ·id ( ) ,=]
[Exp --> ·Exp [ Exp ] ,=]
[Exp --> ·Exp . id ,=]
[Exp --> ·id ,=]
[Exp --> ·int ,=]
[Exp --> ·float ,=]
[Exp --> ·Exp = Exp ,relop]
[Exp --> ·Exp relop Exp ,relop]
[Exp --> ·Exp + Exp ,relop]
[Exp --> ·Exp - Exp ,relop]
[Exp --> ·Exp * Exp ,relop]
[Exp --> ·Exp / Exp ,relop]
[Exp --> ·Exp logop Exp ,relop]
[Exp --> ·Exp bitop Exp ,relop]
[Exp --> ·( Exp ) ,relop]
[Exp --> ·- Exp ,relop]
[Exp --> ·! Exp ,relop]
[Exp --> ·id ( Args ) ,relop]
[Exp --> ·id ( ) ,relop]
[Exp --> ·Exp [ Exp ] ,relop]
[Exp --> ·Exp . id ,relop]
[Exp --> ·id ,relop]
[Exp --> ·int ,relop]
[Exp --> ·float ,relop]
[Exp --> ·Exp = Exp ,+]
[Exp --> ·Exp relop Exp ,+]
[Exp --> ·Exp + Exp ,+]
[Exp --> ·Exp - Exp ,+]
[Exp --> ·Exp * Exp ,+]
[Exp --> ·Exp / Exp ,+]
[Exp --> ·Exp logop Exp ,+]
[Exp --> ·Exp bitop Exp ,+]
[Exp --> ·( Exp ) ,+]
[Exp --> ·- Exp ,+]
[Exp --> ·! Exp ,+]
[Exp --> ·id ( Args ) ,+]
[Exp --> ·id ( ) ,+]
[Exp --> ·Exp [ Exp ] ,+]
[Exp --> ·Exp . id ,+]
[Exp --> ·id ,+]
[Exp --> ·int ,+]
[Exp --> ·float ,+]
[Exp --> ·Exp = Exp ,-]
[Exp --> ·Exp relop Exp ,-]
[Exp --> ·Exp + Exp ,-]
[Exp --> ·Exp - Exp ,-]
[Exp --> ·Exp * Exp ,-]
[Exp --> ·Exp / Exp ,-]
[Exp --> ·Exp logop Exp ,-]
[Exp --> ·Exp bitop Exp ,-]
[Exp --> ·( Exp ) ,-]
[Exp --> ·- Exp ,-]
[Exp --> ·! Exp ,-]
[Exp --> ·id ( Args ) ,-]
[Exp --> ·id ( ) ,-]
[Exp --> ·Exp [ Exp ] ,-]
[Exp --> ·Exp . id ,-]
[Exp --> ·id ,-]
[Exp --> ·int ,-]
[Exp --> ·float ,-]
[Exp --> ·Exp = Exp ,*]
[Exp --> ·Exp relop Exp ,*]
[Exp --> ·Exp + Exp ,*]
[Exp --> ·Exp - Exp ,*]
[Exp --> ·Exp * Exp ,*]
[Exp --> ·Exp / Exp ,*]
[Exp --> ·Exp logop Exp ,*]
[Exp --> ·Exp bitop Exp ,*]
[Exp --> ·( Exp ) ,*]
[Exp --> ·- Exp ,*]
[Exp --> ·! Exp ,*]
[Exp --> ·id ( Args ) ,*]
[Exp --> ·id ( ) ,*]
[Exp --> ·Exp [ Exp ] ,*]
[Exp --> ·Exp . id ,*]
[Exp --> ·id ,*]
[Exp --> ·int ,*]
[Exp --> ·float ,*]
[Exp --> ·Exp = Exp ,/]
[Exp --> ·Exp relop Exp ,/]
[Exp --> ·Exp + Exp ,/]
[Exp --> ·Exp - Exp ,/]
[Exp --> ·Exp * Exp ,/]
[Exp --> ·Exp / Exp ,/]
[Exp --> ·Exp logop Exp ,/]
[Exp --> ·Exp bitop Exp ,/]
[Exp --> ·( Exp ) ,/]
[Exp --> ·- Exp ,/]
[Exp --> ·! Exp ,/]
[Exp --> ·id ( Args ) ,/]
[Exp --> ·id ( ) ,/]
[Exp --> ·Exp [ Exp ] ,/]
[Exp --> ·Exp . id ,/]
[Exp --> ·id ,/]
[Exp --> ·int ,/]
[Exp --> ·float ,/]
[Exp --> ·Exp = Exp ,logop]
[Exp --> ·Exp relop Exp ,logop]
[Exp --> ·Exp + Exp ,logop]
[Exp --> ·Exp - Exp ,logop]
[Exp --> ·Exp * Exp ,logop]
[Exp --> ·Exp / Exp ,logop]
[Exp --> ·Exp logop Exp ,logop]
[Exp --> ·Exp bitop Exp ,logop]
[Exp --> ·( Exp ) ,logop]
[Exp --> ·- Exp ,logop]
[Exp --> ·! Exp ,logop]
[Exp --> ·id ( Args ) ,logop]
[Exp --> ·id ( ) ,logop]
[Exp --> ·Exp [ Exp ] ,logop]
[Exp --> ·Exp . id ,logop]
[Exp --> ·id ,logop]
[Exp --> ·int ,logop]
[Exp --> ·float ,logop]
[Exp --> ·Exp = Exp ,bitop]
[Exp --> ·Exp relop Exp ,bitop]
[Exp --> ·Exp + Exp ,bitop]
[Exp --> ·Exp - Exp ,bitop]
[Exp --> ·Exp * Exp ,bitop]
[Exp --> ·Exp / Exp ,bitop]
[Exp --> ·Exp logop Exp ,bitop]
[Exp --> ·Exp bitop Exp ,bitop]
[Exp --> ·( Exp ) ,bitop]
[Exp --> ·- Exp ,bitop]
[Exp --> ·! Exp ,bitop]
[Exp --> ·id ( Args ) ,bitop]
[Exp --> ·id ( ) ,bitop]
[Exp --> ·Exp [ Exp ] ,bitop]
[Exp --> ·Exp . id ,bitop]
[Exp --> ·id ,bitop]
[Exp --> ·int ,bitop]
[Exp --> ·float ,bitop]
[Exp --> ·Exp = Exp ,[]
[Exp --> ·Exp relop Exp ,[]
[Exp --> ·Exp + Exp ,[]
[Exp --> ·Exp - Exp ,[]
[Exp --> ·Exp * Exp ,[]
[Exp --> ·Exp / Exp ,[]
[Exp --> ·Exp logop Exp ,[]
[Exp --> ·Exp bitop Exp ,[]
[Exp --> ·( Exp ) ,[]
[Exp --> ·- Exp ,[]
[Exp --> ·! Exp ,[]
[Exp --> ·id ( Args ) ,[]
[Exp --> ·id ( ) ,[]
[Exp --> ·Exp [ Exp ] ,[]
[Exp --> ·Exp . id ,[]
[Exp --> ·id ,[]
[Exp --> ·int ,[]
[Exp --> ·float ,[]
[Exp --> ·Exp = Exp ,.]
[Exp --> ·Exp relop Exp ,.]
[Exp --> ·Exp + Exp ,.]
[Exp --> ·Exp - Exp ,.]
[Exp --> ·Exp * Exp ,.]
[Exp --> ·Exp / Exp ,.]
[Exp --> ·Exp logop Exp ,.]
[Exp --> ·Exp bitop Exp ,.]
[Exp --> ·( Exp ) ,.]
[Exp --> ·- Exp ,.]
[Exp --> ·! Exp ,.]
[Exp --> ·id ( Args ) ,.]
[Exp --> ·id ( ) ,.]
[Exp --> ·Exp [ Exp ] ,.]
[Exp --> ·Exp . id ,.]
[Exp --> ·id ,.]
[Exp --> ·int ,.]
[Exp --> ·float ,.]
----------------------
项目集I33
大小：51

[DefList --> Def ·DefList ,int]
[DefList --> Def ·DefList ,float]
[DefList --> Def ·DefList ,id]
[DefList --> Def ·DefList ,-]
[DefList --> Def ·DefList ,!]
[DefList --> Def ·DefList ,(]
[DefList --> Def ·DefList ,{]
[DefList --> Def ·DefList ,}]
[DefList --> Def ·DefList ,if]
[DefList --> Def ·DefList ,while]
[DefList --> Def ·DefList ,return]
[DefList --> ·Def DefList ,int]
[DefList --> ·EPSILON ,int]
[DefList --> ·Def DefList ,float]
[DefList --> ·EPSILON ,float]
[DefList --> ·Def DefList ,id]
[DefList --> ·EPSILON ,id]
[DefList --> ·Def DefList ,-]
[DefList --> ·EPSILON ,-]
[DefList --> ·Def DefList ,!]
[DefList --> ·EPSILON ,!]
[DefList --> ·Def DefList ,(]
[DefList --> ·EPSILON ,(]
[DefList --> ·Def DefList ,{]
[DefList --> ·EPSILON ,{]
[DefList --> ·Def DefList ,}]
[DefList --> ·EPSILON ,}]
[DefList --> ·Def DefList ,if]
[DefList --> ·EPSILON ,if]
[DefList --> ·Def DefList ,while]
[DefList --> ·EPSILON ,while]
[DefList --> ·Def DefList ,return]
[DefList --> ·EPSILON ,return]
[Def --> ·Specifier DecList ; ,int]
[Def --> ·Specifier DecList ; ,float]
[Def --> ·Specifier DecList ; ,struct]
[Def --> ·Specifier DecList ; ,id]
[Def --> ·Specifier DecList ; ,-]
[Def --> ·Specifier DecList ; ,!]
[Def --> ·Specifier DecList ; ,(]
[Def --> ·Specifier DecList ; ,{]
[Def --> ·Specifier DecList ; ,}]
[Def --> ·Specifier DecList ; ,if]
[Def --> ·Specifier DecList ; ,while]
[Def --> ·Specifier DecList ; ,return]
[Specifier --> ·TYPE ,id]
[Specifier --> ·StructSpecifier ,id]
[TYPE --> ·int ,id]
[TYPE --> ·float ,id]
[StructSpecifier --> ·struct OptTag { DefList } ,id]
[StructSpecifier --> ·struct Tag ,id]
----------------------
项目集I34
大小：1

[TYPE --> int · ,id]
----------------------
项目集I35
大小：1

[TYPE --> float · ,id]
----------------------
项目集I36
大小：5

[StructSpecifier --> struct ·OptTag { DefList } ,id]
[StructSpecifier --> struct ·Tag ,id]
[OptTag --> ·id ,{]
[OptTag --> ·EPSILON ,{]
[Tag --> ·id ,id]
----------------------
项目集I37
大小：3

[VarDec --> VarDec [ int ·] ,;]
[VarDec --> VarDec [ int ·] ,,]
[VarDec --> VarDec [ int ·] ,[]
----------------------
项目集I38
大小：1

[ExtDecList --> VarDec , ExtDecList · ,;]
----------------------
项目集I39
大小：3

[VarDec --> id · ,;]
[VarDec --> id · ,,]
[VarDec --> id · ,[]
----------------------
项目集I40
大小：8

[ParamDec --> Specifier ·VarDec ,,]
[ParamDec --> Specifier ·VarDec ,)]
[VarDec --> ·id ,,]
[VarDec --> ·VarDec [ int ] ,,]
[VarDec --> ·id ,)]
[VarDec --> ·VarDec [ int ] ,)]
[VarDec --> ·id ,[]
[VarDec --> ·VarDec [ int ] ,[]
----------------------
项目集I41
大小：1

[FunDec --> id ( VarList ·) ,{]
----------------------
项目集I42
大小：2

[VarList --> ParamDec ·, VarList ,)]
[VarList --> ParamDec · ,)]
----------------------
项目集I43
大小：1

[FunDec --> id ( ) · ,{]
----------------------
项目集I44
大小：1

[DefList --> EPSILON · ,}]
----------------------
项目集I45
大小：18

[Def --> Specifier ·DecList ; ,int]
[Def --> Specifier ·DecList ; ,float]
[Def --> Specifier ·DecList ; ,}]
[Def --> Specifier ·DecList ; ,struct]
[DecList --> ·Dec ,;]
[DecList --> ·Dec , DecList ,;]
[Dec --> ·VarDec ,;]
[Dec --> ·VarDec = Exp ,;]
[Dec --> ·VarDec ,,]
[Dec --> ·VarDec = Exp ,,]
[VarDec --> ·id ,;]
[VarDec --> ·VarDec [ int ] ,;]
[VarDec --> ·id ,=]
[VarDec --> ·VarDec [ int ] ,=]
[VarDec --> ·id ,,]
[VarDec --> ·VarDec [ int ] ,,]
[VarDec --> ·id ,[]
[VarDec --> ·VarDec [ int ] ,[]
----------------------
项目集I46
大小：2

[StructSpecifier --> struct OptTag { DefList ·} ,id]
[StructSpecifier --> struct OptTag { DefList ·} ,;]
----------------------
项目集I47
大小：13

[DefList --> Def ·DefList ,}]
[DefList --> ·Def DefList ,}]
[DefList --> ·EPSILON ,}]
[Def --> ·Specifier DecList ; ,int]
[Def --> ·Specifier DecList ; ,float]
[Def --> ·Specifier DecList ; ,}]
[Def --> ·Specifier DecList ; ,struct]
[Specifier --> ·TYPE ,id]
[Specifier --> ·StructSpecifier ,id]
[TYPE --> ·int ,id]
[TYPE --> ·float ,id]
[StructSpecifier --> ·struct OptTag { DefList } ,id]
[StructSpecifier --> ·struct Tag ,id]
----------------------
项目集I48
大小：8

[Dec --> VarDec · ,;]
[Dec --> VarDec ·= Exp ,;]
[Dec --> VarDec · ,,]
[Dec --> VarDec ·= Exp ,,]
[VarDec --> VarDec ·[ int ] ,;]
[VarDec --> VarDec ·[ int ] ,=]
[VarDec --> VarDec ·[ int ] ,,]
[VarDec --> VarDec ·[ int ] ,[]
----------------------
项目集I49
大小：12

[Def --> Specifier DecList ·; ,int]
[Def --> Specifier DecList ·; ,float]
[Def --> Specifier DecList ·; ,struct]
[Def --> Specifier DecList ·; ,id]
[Def --> Specifier DecList ·; ,-]
[Def --> Specifier DecList ·; ,!]
[Def --> Specifier DecList ·; ,(]
[Def --> Specifier DecList ·; ,{]
[Def --> Specifier DecList ·; ,}]
[Def --> Specifier DecList ·; ,if]
[Def --> Specifier DecList ·; ,while]
[Def --> Specifier DecList ·; ,return]
----------------------
项目集I50
大小：2

[DecList --> Dec · ,;]
[DecList --> Dec ·, DecList ,;]
----------------------
项目集I51
大小：4

[VarDec --> id · ,;]
[VarDec --> id · ,=]
[VarDec --> id · ,,]
[VarDec --> id · ,[]
----------------------
项目集I52
大小：1

[StmtList --> EPSILON · ,}]
----------------------
项目集I53
大小：11

[Stmt --> CompSt · ,int]
[Stmt --> CompSt · ,float]
[Stmt --> CompSt · ,id]
[Stmt --> CompSt · ,-]
[Stmt --> CompSt · ,!]
[Stmt --> CompSt · ,(]
[Stmt --> CompSt · ,{]
[Stmt --> CompSt · ,}]
[Stmt --> CompSt · ,if]
[Stmt --> CompSt · ,while]
[Stmt --> CompSt · ,return]
----------------------
项目集I54
大小：4

[CompSt --> { DefList StmtList ·} ,END]
[CompSt --> { DefList StmtList ·} ,int]
[CompSt --> { DefList StmtList ·} ,float]
[CompSt --> { DefList StmtList ·} ,struct]
----------------------
项目集I55
大小：278

[StmtList --> Stmt ·StmtList ,}]
[StmtList --> ·Stmt StmtList ,}]
[StmtList --> ·EPSILON ,}]
[Stmt --> ·Exp ; ,int]
[Stmt --> ·Exp ; ,float]
[Stmt --> ·Exp ; ,id]
[Stmt --> ·Exp ; ,-]
[Stmt --> ·Exp ; ,!]
[Stmt --> ·Exp ; ,(]
[Stmt --> ·Exp ; ,{]
[Stmt --> ·Exp ; ,}]
[Stmt --> ·Exp ; ,if]
[Stmt --> ·Exp ; ,while]
[Stmt --> ·Exp ; ,return]
[Stmt --> ·CompSt ,int]
[Stmt --> ·CompSt ,float]
[Stmt --> ·CompSt ,id]
[Stmt --> ·CompSt ,-]
[Stmt --> ·CompSt ,!]
[Stmt --> ·CompSt ,(]
[Stmt --> ·CompSt ,{]
[Stmt --> ·CompSt ,}]
[Stmt --> ·CompSt ,if]
[Stmt --> ·CompSt ,while]
[Stmt --> ·CompSt ,return]
[Stmt --> ·return Exp ; ,int]
[Stmt --> ·return Exp ; ,float]
[Stmt --> ·return Exp ; ,id]
[Stmt --> ·return Exp ; ,-]
[Stmt --> ·return Exp ; ,!]
[Stmt --> ·return Exp ; ,(]
[Stmt --> ·return Exp ; ,{]
[Stmt --> ·return Exp ; ,}]
[Stmt --> ·return Exp ; ,if]
[Stmt --> ·return Exp ; ,while]
[Stmt --> ·return Exp ; ,return]
[Stmt --> ·if ( Exp ) Stmt ,int]
[Stmt --> ·if ( Exp ) Stmt ,float]
[Stmt --> ·if ( Exp ) Stmt ,id]
[Stmt --> ·if ( Exp ) Stmt ,-]
[Stmt --> ·if ( Exp ) Stmt ,!]
[Stmt --> ·if ( Exp ) Stmt ,(]
[Stmt --> ·if ( Exp ) Stmt ,{]
[Stmt --> ·if ( Exp ) Stmt ,}]
[Stmt --> ·if ( Exp ) Stmt ,if]
[Stmt --> ·if ( Exp ) Stmt ,while]
[Stmt --> ·if ( Exp ) Stmt ,return]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,int]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,float]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,id]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,-]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,!]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,(]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,{]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,}]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,if]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,while]
[Stmt --> ·if ( Exp ) Stmt else Stmt ,return]
[Stmt --> ·while ( Exp ) Stmt ,int]
[Stmt --> ·while ( Exp ) Stmt ,float]
[Stmt --> ·while ( Exp ) Stmt ,id]
[Stmt --> ·while ( Exp ) Stmt ,-]
[Stmt --> ·while ( Exp ) Stmt ,!]
[Stmt --> ·while ( Exp ) Stmt ,(]
[Stmt --> ·while ( Exp ) Stmt ,{]
[Stmt --> ·while ( Exp ) Stmt ,}]
[Stmt --> ·while ( Exp ) Stmt ,if]
[Stmt --> ·while ( Exp ) Stmt ,while]
[Stmt --> ·while ( Exp ) Stmt ,return]
[Exp --> ·Exp = Exp ,;]
[Exp --> ·Exp relop Exp ,;]
[Exp --> ·Exp + Exp ,;]
[Exp --> ·Exp - Exp ,;]
[Exp --> ·Exp * Exp ,;]
[Exp --> ·Exp / Exp ,;]
[Exp --> ·Exp logop Exp ,;]
[Exp --> ·Exp bitop Exp ,;]
[Exp --> ·( Exp ) ,;]
[Exp --> ·- Exp ,;]
[Exp --> ·! Exp ,;]
[Exp --> ·id ( Args ) ,;]
[Exp --> ·id ( ) ,;]
[Exp --> ·Exp [ Exp ] ,;]
[Exp --> ·Exp . id ,;]
[Exp --> ·id ,;]
[Exp --> ·int ,;]
[Exp --> ·float ,;]
[CompSt --> ·{ DefList StmtList } ,int]
[CompSt --> ·{ DefList StmtList } ,float]
[CompSt --> ·{ DefList StmtList } ,id]
[CompSt --> ·{ DefList StmtList } ,-]
[CompSt --> ·{ DefList StmtList } ,!]
[CompSt --> ·{ DefList StmtList } ,(]
[CompSt --> ·{ DefList StmtList } ,{]
[CompSt --> ·{ DefList StmtList } ,}]
[CompSt --> ·{ DefList StmtList } ,if]
[CompSt --> ·{ DefList StmtList } ,while]
[CompSt --> ·{ DefList StmtList } ,return]
[Exp --> ·Exp = Exp ,=]
[Exp --> ·Exp relop Exp ,=]
[Exp --> ·Exp + Exp ,=]
[Exp --> ·Exp - Exp ,=]
[Exp --> ·Exp * Exp ,=]
[Exp --> ·Exp / Exp ,=]
[Exp --> ·Exp logop Exp ,=]
[Exp --> ·Exp bitop Exp ,=]
[Exp --> ·( Exp ) ,=]
[Exp --> ·- Exp ,=]
[Exp --> ·! Exp ,=]
[Exp --> ·id ( Args ) ,=]
[Exp --> ·id ( ) ,=]
[Exp --> ·Exp [ Exp ] ,=]
[Exp --> ·Exp . id ,=]
[Exp --> ·id ,=]
[Exp --> ·int ,=]
[Exp --> ·float ,=]
[Exp --> ·Exp = Exp ,relop]
[Exp --> ·Exp relop Exp ,relop]
[Exp --> ·Exp + Exp ,relop]
[Exp --> ·Exp - Exp ,relop]
[Exp --> ·Exp * Exp ,relop]
[Exp --> ·Exp / Exp ,relop]
[Exp --> ·Exp logop Exp ,relop]
[Exp --> ·Exp bitop Exp ,relop]
[Exp --> ·( Exp ) ,relop]
[Exp --> ·- Exp ,relop]
[Exp --> ·! Exp ,relop]
[Exp --> ·id ( Args ) ,relop]
[Exp --> ·id ( ) ,relop]
[Exp --> ·Exp [ Exp ] ,relop]
[Exp --> ·Exp . id ,relop]
[Exp --> ·id ,relop]
[Exp --> ·int ,relop]
[Exp --> ·float ,relop]
[Exp --> ·Exp = Exp ,+]
[Exp --> ·Exp relop Exp ,+]
[Exp --> ·Exp + Exp ,+]
[Exp --> ·Exp - Exp ,+]
[Exp --> ·Exp * Exp ,+]
[Exp --> ·Exp / Exp ,+]
[Exp --> ·Exp logop Exp ,+]
[Exp --> ·Exp bitop Exp ,+]
[Exp --> ·( Exp ) ,+]
[Exp --> ·- Exp ,+]
[Exp --> ·! Exp ,+]
[Exp --> ·id ( Args ) ,+]
[Exp --> ·id ( ) ,+]
[Exp --> ·Exp [ Exp ] ,+]
[Exp --> ·Exp . id ,+]
[Exp --> ·id ,+]
[Exp --> ·int ,+]
[Exp --> ·float ,+]
[Exp --> ·Exp = Exp ,-]
[Exp --> ·Exp relop Exp ,-]
[Exp --> ·Exp + Exp ,-]
[Exp --> ·Exp - Exp ,-]
[Exp --> ·Exp * Exp ,-]
[Exp --> ·Exp / Exp ,-]
[Exp --> ·Exp logop Exp ,-]
[Exp --> ·Exp bitop Exp ,-]
[Exp --> ·( Exp ) ,-]
[Exp --> ·- Exp ,-]
[Exp --> ·! Exp ,-]
[Exp --> ·id ( Args ) ,-]
[Exp --> ·id ( ) ,-]
[Exp --> ·Exp [ Exp ] ,-]
[Exp --> ·Exp . id ,-]
[Exp --> ·id ,-]
[Exp --> ·int ,-]
[Exp --> ·float ,-]
[Exp --> ·Exp = Exp ,*]
[Exp --> ·Exp relop Exp ,*]
[Exp --> ·Exp + Exp ,*]
[Exp --> ·Exp - Exp ,*]
[Exp --> ·Exp * Exp ,*]
[Exp --> ·Exp / Exp ,*]
[Exp --> ·Exp logop Exp ,*]
[Exp --> ·Exp bitop Exp ,*]
[Exp --> ·( Exp ) ,*]
[Exp --> ·- Exp ,*]
[Exp --> ·! Exp ,*]
[Exp --> ·id ( Args ) ,*]
[Exp --> ·id ( ) ,*]
[Exp --> ·Exp [ Exp ] ,*]
[Exp --> ·Exp . id ,*]
[Exp --> ·id ,*]
[Exp --> ·int ,*]
[Exp --> ·float ,*]
[Exp --> ·Exp = Exp ,/]
[Exp --> ·Exp relop Exp ,/]
[Exp --> ·Exp + Exp ,/]
[Exp --> ·Exp - Exp ,/]
[Exp --> ·Exp * Exp ,/]
[Exp --> ·Exp / Exp ,/]
[Exp --> ·Exp logop Exp ,/]
[Exp --> ·Exp bitop Exp ,/]
[Exp --> ·( Exp ) ,/]
[Exp --> ·- Exp ,/]
[Exp --> ·! Exp ,/]
[Exp --> ·id ( Args ) ,/]
[Exp --> ·id ( ) ,/]
[Exp --> ·Exp [ Exp ] ,/]
[Exp --> ·Exp . id ,/]
[Exp --> ·id ,/]
[Exp --> ·int ,/]
[Exp --> ·float ,/]
[Exp --> ·Exp = Exp ,logop]
[Exp --> ·Exp relop Exp ,logop]
[Exp --> ·Exp + Exp ,logop]
[Exp --> ·Exp - Exp ,logop]
[Exp --> ·Exp * Exp ,logop]
[Exp --> ·Exp / Exp ,logop]
[Exp --> ·Exp logop Exp ,logop]
[Exp --> ·Exp bitop Exp ,logop]
[Exp --> ·( Exp ) ,logop]
[Exp --> ·- Exp ,logop]
[Exp --> ·! Exp ,logop]
[Exp --> ·id ( Args ) ,logop]
[Exp --> ·id ( ) ,logop]
[Exp --> ·Exp [ Exp ] ,logop]
[Exp --> ·Exp . id ,logop]
[Exp --> ·id ,logop]
[Exp --> ·int ,logop]
[Exp --> ·float ,logop]
[Exp --> ·Exp = Exp ,bitop]
[Exp --> ·Exp relop Exp ,bitop]
[Exp --> ·Exp + Exp ,bitop]
[Exp --> ·Exp - Exp ,bitop]
[Exp --> ·Exp * Exp ,bitop]
[Exp --> ·Exp / Exp ,bitop]
[Exp --> ·Exp logop Exp ,bitop]
[Exp --> ·Exp bitop Exp ,bitop]
[Exp --> ·( Exp ) ,bitop]
[Exp --> ·- Exp ,bitop]
[Exp --> ·! Exp ,bitop]
[Exp --> ·id ( Args ) ,bitop]
[Exp --> ·id ( ) ,bitop]
[Exp --> ·Exp [ Exp ] ,bitop]
[Exp --> ·Exp . id ,bitop]
[Exp --> ·id ,bitop]
[Exp --> ·int ,bitop]
[Exp --> ·float ,bitop]
[Exp --> ·Exp = Exp ,[]
[Exp --> ·Exp relop Exp ,[]
[Exp --> ·Exp + Exp ,[]
[Exp --> ·Exp - Exp ,[]
[Exp --> ·Exp * Exp ,[]
[Exp --> ·Exp / Exp ,[]
[Exp --> ·Exp logop Exp ,[]
[Exp --> ·Exp bitop Exp ,[]
[Exp --> ·( Exp ) ,[]
[Exp --> ·- Exp ,[]
[Exp --> ·! Exp ,[]
[Exp --> ·id ( Args ) ,[]
[Exp --> ·id ( ) ,[]
[Exp --> ·Exp [ Exp ] ,[]
[Exp --> ·Exp . id ,[]
[Exp --> ·id ,[]
[Exp --> ·int ,[]
[Exp --> ·float ,[]
[Exp --> ·Exp = Exp ,.]
[Exp --> ·Exp relop Exp ,.]
[Exp --> ·Exp + Exp ,.]
[Exp --> ·Exp - Exp ,.]
[Exp --> ·Exp * Exp ,.]
[Exp --> ·Exp / Exp ,.]
[Exp --> ·Exp logop Exp ,.]
[Exp --> ·Exp bitop Exp ,.]
[Exp --> ·( Exp ) ,.]
[Exp --> ·- Exp ,.]
[Exp --> ·! Exp ,.]
[Exp --> ·id ( Args ) ,.]
[Exp --> ·id ( ) ,.]
[Exp --> ·Exp [ Exp ] ,.]
[Exp --> ·Exp . id ,.]
[Exp --> ·id ,.]
[Exp --> ·int ,.]
[Exp --> ·float ,.]
----------------------
项目集I56
大小：121

[Stmt --> Exp ·; ,int]
[Stmt --> Exp ·; ,float]
[Stmt --> Exp ·; ,id]
[Stmt --> Exp ·; ,-]
[Stmt --> Exp ·; ,!]
[Stmt --> Exp ·; ,(]
[Stmt --> Exp ·; ,{]
[Stmt --> Exp ·; ,}]
[Stmt --> Exp ·; ,if]
[Stmt --> Exp ·; ,while]
[Stmt --> Exp ·; ,return]
[Exp --> Exp ·= Exp ,;]
[Exp --> Exp ·relop Exp ,;]
[Exp --> Exp ·+ Exp ,;]
[Exp --> Exp ·- Exp ,;]
[Exp --> Exp ·* Exp ,;]
[Exp --> Exp ·/ Exp ,;]
[Exp --> Exp ·logop Exp ,;]
[Exp --> Exp ·bitop Exp ,;]
[Exp --> Exp ·[ Exp ] ,;]
[Exp --> Exp ·. id ,;]
[Exp --> Exp ·= Exp ,=]
[Exp --> Exp ·relop Exp ,=]
[Exp --> Exp ·+ Exp ,=]
[Exp --> Exp ·- Exp ,=]
[Exp --> Exp ·* Exp ,=]
[Exp --> Exp ·/ Exp ,=]
[Exp --> Exp ·logop Exp ,=]
[Exp --> Exp ·bitop Exp ,=]
[Exp --> Exp ·[ Exp ] ,=]
[Exp --> Exp ·. id ,=]
[Exp --> Exp ·= Exp ,relop]
[Exp --> Exp ·relop Exp ,relop]
[Exp --> Exp ·+ Exp ,relop]
[Exp --> Exp ·- Exp ,relop]
[Exp --> Exp ·* Exp ,relop]
[Exp --> Exp ·/ Exp ,relop]
[Exp --> Exp ·logop Exp ,relop]
[Exp --> Exp ·bitop Exp ,relop]
[Exp --> Exp ·[ Exp ] ,relop]
[Exp --> Exp ·. id ,relop]
[Exp --> Exp ·= Exp ,+]
[Exp --> Exp ·relop Exp ,+]
[Exp --> Exp ·+ Exp ,+]
[Exp --> Exp ·- Exp ,+]
[Exp --> Exp ·* Exp ,+]
[Exp --> Exp ·/ Exp ,+]
[Exp --> Exp ·logop Exp ,+]
[Exp --> Exp ·bitop Exp ,+]
[Exp --> Exp ·[ Exp ] ,+]
[Exp --> Exp ·. id ,+]
[Exp --> Exp ·= Exp ,-]
[Exp --> Exp ·relop Exp ,-]
[Exp --> Exp ·+ Exp ,-]
[Exp --> Exp ·- Exp ,-]
[Exp --> Exp ·* Exp ,-]
[Exp --> Exp ·/ Exp ,-]
[Exp --> Exp ·logop Exp ,-]
[Exp --> Exp ·bitop Exp ,-]
[Exp --> Exp ·[ Exp ] ,-]
[Exp --> Exp ·. id ,-]
[Exp --> Exp ·= Exp ,*]
[Exp --> Exp ·relop Exp ,*]
[Exp --> Exp ·+ Exp ,*]
[Exp --> Exp ·- Exp ,*]
[Exp --> Exp ·* Exp ,*]
[Exp --> Exp ·/ Exp ,*]
[Exp --> Exp ·logop Exp ,*]
[Exp --> Exp ·bitop Exp ,*]
[Exp --> Exp ·[ Exp ] ,*]
[Exp --> Exp ·. id ,*]
[Exp --> Exp ·= Exp ,/]
[Exp --> Exp ·relop Exp ,/]
[Exp --> Exp ·+ Exp ,/]
[Exp --> Exp ·- Exp ,/]
[Exp --> Exp ·* Exp ,/]
[Exp --> Exp ·/ Exp ,/]
[Exp --> Exp ·logop Exp ,/]
[Exp --> Exp ·bitop Exp ,/]
[Exp --> Exp ·[ Exp ] ,/]
[Exp --> Exp ·. id ,/]
[Exp --> Exp ·= Exp ,logop]
[Exp --> Exp ·relop Exp ,logop]
[Exp --> Exp ·+ Exp ,logop]
[Exp --> Exp ·- Exp ,logop]
[Exp --> Exp ·* Exp ,logop]
[Exp --> Exp ·/ Exp ,logop]
[Exp --> Exp ·logop Exp ,logop]
[Exp --> Exp ·bitop Exp ,logop]
[Exp --> Exp ·[ Exp ] ,logop]
[Exp --> Exp ·. id ,logop]
[Exp --> Exp ·= Exp ,bitop]
[Exp --> Exp ·relop Exp ,bitop]
[Exp --> Exp ·+ Exp ,bitop]
[Exp --> Exp ·- Exp ,bitop]
[Exp --> Exp ·* Exp ,bitop]
[Exp --> Exp ·/ Exp ,bitop]
[Exp --> Exp ·logop Exp ,bitop]
[Exp --> Exp ·bitop Exp ,bitop]
[Exp --> Exp ·[ Exp ] ,bitop]
[Exp --> Exp ·. id ,bitop]
[Exp --> Exp ·= Exp ,[]
[Exp --> Exp ·relop Exp ,[]
[Exp --> Exp ·+ Exp ,[]
[Exp --> Exp ·- Exp ,[]
[Exp --> Exp ·* Exp ,[]
[Exp --> Exp ·/ Exp ,[]
[Exp --> Exp ·logop Exp ,[]
[Exp --> Exp ·bitop Exp ,[]
[Exp --> Exp ·[ Exp ] ,[]
[Exp --> Exp ·. id ,[]
[Exp --> Exp ·= Exp ,.]
[Exp --> Exp ·relop Exp ,.]
[Exp --> Exp ·+ Exp ,.]
[Exp --> Exp ·- Exp ,.]
[Exp --> Exp ·* Exp ,.]
[Exp --> Exp ·/ Exp ,.]
[Exp --> Exp ·logop Exp ,.]
[Exp --> Exp ·bitop Exp ,.]
[Exp --> Exp ·[ Exp ] ,.]
[Exp --> Exp ·. id ,.]
----------------------
项目集I57
大小：11

[Exp --> int · ,;]
[Exp --> int · ,=]
[Exp --> int · ,relop]
[Exp --> int · ,+]
[Exp --> int · ,-]
[Exp --> int · ,*]
[Exp --> int · ,/]
[Exp --> int · ,logop]
[Exp --> int · ,bitop]
[Exp --> int · ,[]
[Exp --> int · ,.]
----------------------
项目集I58
大小：11

[Exp --> float · ,;]
[Exp --> float · ,=]
[Exp --> float · ,relop]
[Exp --> float · ,+]
[Exp --> float · ,-]
[Exp --> float · ,*]
[Exp --> float · ,/]
[Exp --> float · ,logop]
[Exp --> float · ,bitop]
[Exp --> float · ,[]
[Exp --> float · ,.]
----------------------
项目集I59
大小：33

[Exp --> id ·( Args ) ,;]
[Exp --> id ·( ) ,;]
[Exp --> id · ,;]
[Exp --> id ·( Args ) ,=]
[Exp --> id ·( ) ,=]
[Exp --> id · ,=]
[Exp --> id ·( Args ) ,relop]
[Exp --> id ·( ) ,relop]
[Exp --> id · ,relop]
[Exp --> id ·( Args ) ,+]
[Exp --> id ·( ) ,+]
[Exp --> id · ,+]
[Exp --> id ·( Args ) ,-]
[Exp --> id ·( ) ,-]
[Exp --> id · ,-]
[Exp --> id ·( Args ) ,*]
[Exp --> id ·( ) ,*]
[Exp --> id · ,*]
[Exp --> id ·( Args ) ,/]
[Exp --> id ·( ) ,/]
[Exp --> id · ,/]
[Exp --> id ·( Args ) ,logop]
[Exp --> id ·( ) ,logop]
[Exp --> id · ,logop]
[Exp --> id ·( Args ) ,bitop]
[Exp --> id ·( ) ,bitop]
[Exp --> id · ,bitop]
[Exp --> id ·( Args ) ,[]
[Exp --> id ·( ) ,[]
[Exp --> id · ,[]
[Exp --> id ·( Args ) ,.]
[Exp --> id ·( ) ,.]
[Exp --> id · ,.]
----------------------
项目集I60
大小：209

[Exp --> - ·Exp ,;]
[Exp --> - ·Exp ,=]
[Exp --> - ·Exp ,relop]
[Exp --> - ·Exp ,+]
[Exp --> - ·Exp ,-]
[Exp --> - ·Exp ,*]
[Exp --> - ·Exp ,/]
[Exp --> - ·Exp ,logop]
[Exp --> - ·Exp ,bitop]
[Exp --> - ·Exp ,[]
[Exp --> - ·Exp ,.]
[Exp --> ·Exp = Exp ,;]
[Exp --> ·Exp relop Exp ,;]
[Exp --> ·Exp + Exp ,;]
[Exp --> ·Exp - Exp ,;]
[Exp --> ·Exp * Exp ,;]
[Exp --> ·Exp / Exp ,;]
[Exp --> ·Exp logop Exp ,;]
[Exp --> ·Exp bitop Exp ,;]
[Exp --> ·( Exp ) ,;]
[Exp --> ·- Exp ,;]
[Exp --> ·! Exp ,;]
[Exp --> ·id ( Args ) ,;]
[Exp --> ·id ( ) ,;]
[Exp --> ·Exp [ Exp ] ,;]
[Exp --> ·Exp . id ,;]
[Exp --> ·id ,;]
[Exp --> ·int ,;]
[Exp --> ·float ,;]
[Exp --> ·Exp = Exp ,=]
[Exp --> ·Exp relop Exp ,=]
[Exp --> ·Exp + Exp ,=]
[Exp --> ·Exp - Exp ,=]
[Exp --> ·Exp * Exp ,=]
[Exp --> ·Exp / Exp ,=]
[Exp --> ·Exp logop Exp ,=]
[Exp --> ·Exp bitop Exp ,=]
[Exp --> ·( Exp ) ,=]
[Exp --> ·- Exp ,=]
[Exp --> ·! Exp ,=]
[Exp --> ·id ( Args ) ,=]
[Exp --> ·id ( ) ,=]
[Exp --> ·Exp [ Exp ] ,=]
[Exp --> ·Exp . id ,=]
[Exp --> ·id ,=]
[Exp --> ·int ,=]
[Exp --> ·float ,=]
[Exp --> ·Exp = Exp ,relop]
[Exp --> ·Exp relop Exp ,relop]
[Exp --> ·Exp + Exp ,relop]
[Exp --> ·Exp - Exp ,relop]
[Exp --> ·Exp * Exp ,relop]
[Exp --> ·Exp / Exp ,relop]
[Exp --> ·Exp logop Exp ,relop]
[Exp --> ·Exp bitop Exp ,relop]
[Exp --> ·( Exp ) ,relop]
[Exp --> ·- Exp ,relop]
[Exp --> ·! Exp ,relop]
[Exp --> ·id ( Args ) ,relop]
[Exp --> ·id ( ) ,relop]
[Exp --> ·Exp [ Exp ] ,relop]
[Exp --> ·Exp . id ,relop]
[Exp --> ·id ,relop]
[Exp --> ·int ,relop]
[Exp --> ·float ,relop]
[Exp --> ·Exp = Exp ,+]
[Exp --> ·Exp relop Exp ,+]
[Exp --> ·Exp + Exp ,+]
[Exp --> ·Exp - Exp ,+]
[Exp --> ·Exp * Exp ,+]
[Exp --> ·Exp / Exp ,+]
[Exp --> ·Exp logop Exp ,+]
[Exp --> ·Exp bitop Exp ,+]
[Exp --> ·( Exp ) ,+]
[Exp --> ·- Exp ,+]
[Exp --> ·! Exp ,+]
[Exp --> ·id ( Args ) ,+]
[Exp --> ·id ( ) ,+]
[Exp --> ·Exp [ Exp ] ,+]
[Exp --> ·Exp . id ,+]
[Exp --> ·id ,+]
[Exp --> ·int ,+]
[Exp --> ·float ,+]
[Exp --> ·Exp = Exp ,-]
[Exp --> ·Exp relop Exp ,-]
[Exp --> ·Exp + Exp ,-]
[Exp --> ·Exp - Exp ,-]
[Exp --> ·Exp * Exp ,-]
[Exp --> ·Exp / Exp ,-]
[Exp --> ·Exp logop Exp ,-]
[Exp --> ·Exp bitop Exp ,-]
[Exp --> ·( Exp ) ,-]
[Exp --> ·- Exp ,-]
[Exp --> ·! Exp ,-]
[Exp --> ·id ( Args ) ,-]
[Exp --> ·id ( ) ,-]
[Exp --> ·Exp [ Exp ] ,-]
[Exp --> ·Exp . id ,-]
[Exp --> ·id ,-]
[Exp --> ·int ,-]
[Exp --> ·float ,-]
[Exp --> ·Exp = Exp ,*]
[Exp --> ·Exp relop Exp ,*]
[Exp --> ·Exp + Exp ,*]
[Exp --> ·Exp - Exp ,*]
[Exp --> ·Exp * Exp ,*]
[Exp --> ·Exp / Exp ,*]
[Exp --> ·Exp logop Exp ,*]
[Exp --> ·Exp bitop Exp ,*]
[Exp --> ·( Exp ) ,*]
[Exp --> ·- Exp ,*]
[Exp --> ·! Exp ,*]
[Exp --> ·id ( Args ) ,*]
[Exp --> ·id ( ) ,*]
[Exp --> ·Exp [ Exp ] ,*]
[Exp --> ·Exp . id ,*]
[Exp --> ·id ,*]
[Exp --> ·int ,*]
[Exp --> ·float ,*]
[Exp --> ·Exp = Exp ,/]
[Exp --> ·Exp relop Exp ,/]
[Exp --> ·Exp + Exp ,/]
[Exp --> ·Exp - Exp ,/]
[Exp --> ·Exp * Exp ,/]
[Exp --> ·Exp / Exp ,/]
[Exp --> ·Exp logop Exp ,/]
[Exp --> ·Exp bitop Exp ,/]
[Exp --> ·( Exp ) ,/]
[Exp --> ·- Exp ,/]
[Exp --> ·! Exp ,/]
[Exp --> ·id ( Args ) ,/]
[Exp --> ·id ( ) ,/]
[Exp --> ·Exp [ Exp ] ,/]
[Exp --> ·Exp . id ,/]
[Exp --> ·id ,/]
[Exp --> ·int ,/]
[Exp --> ·float ,/]
[Exp --> ·Exp = Exp ,logop]
[Exp --> ·Exp relop Exp ,logop]
[Exp --> ·Exp + Exp ,logop]
[Exp --> ·Exp - Exp ,logop]
[Exp --> ·Exp * Exp ,logop]
[Exp --> ·Exp / Exp ,logop]
[Exp --> ·Exp logop Exp ,logop]
[Exp --> ·Exp bitop Exp ,logop]
[Exp --> ·( Exp ) ,logop]
[Exp --> ·- Exp ,logop]
[Exp --> ·! Exp ,logop]
[Exp --> ·id ( Args ) ,logop]
[Exp --> ·id ( ) ,logop]
[Exp --> ·Exp [ Exp ] ,logop]
[Exp --> ·Exp . id ,logop]
[Exp --> ·id ,logop]
[Exp --> ·int ,logop]
[Exp --> ·float ,logop]
[Exp --> ·Exp = Exp ,bitop]
[Exp --> ·Exp relop Exp ,bitop]
[Exp --> ·Exp + Exp ,bitop]
[Exp --> ·Exp - Exp ,bitop]
[Exp --> ·Exp * Exp ,bitop]
[Exp --> ·Exp / Exp ,bitop]
[Exp --> ·Exp logop Exp ,bitop]
[Exp --> ·Exp bitop Exp ,bitop]
[Exp --> ·( Exp ) ,bitop]
[Exp --> ·- Exp ,bitop]
[Exp --> ·! Exp ,bitop]
[Exp --> ·id ( Args ) ,bitop]
[Exp --> ·id ( ) ,bitop]
[Exp --> ·Exp [ Exp ] ,bitop]
[Exp --> ·Exp . id ,bitop]
[Exp --> ·id ,bitop]
[Exp --> ·int ,bitop]
[Exp --> ·float ,bitop]
[Exp --> ·Exp = Exp ,[]
[Exp --> ·Exp relop Exp ,[]
[Exp --> ·Exp + Exp ,[]
[Exp --> ·Exp - Exp ,[]
[Exp --> ·Exp * Exp ,[]
[Exp --> ·Exp / Exp ,[]
[Exp --> ·Exp logop Exp ,[]
[Exp --> ·Exp bitop Exp ,[]
[Exp --> ·( Exp ) ,[]
[Exp --> ·- Exp ,[]
[Exp --> ·! Exp ,[]
[Exp --> ·id ( Args ) ,[]
[Exp --> ·id ( ) ,[]
[Exp --> ·Exp [ Exp ] ,[]
[Exp --> ·Exp . id ,[]
[Exp --> ·id ,[]
[Exp --> ·int ,[]
[Exp --> ·float ,[]
[Exp --> ·Exp = Exp ,.]
[Exp --> ·Exp relop Exp ,.]
[Exp --> ·Exp + Exp ,.]
[Exp --> ·Exp - Exp ,.]
[Exp --> ·Exp * Exp ,.]
[Exp --> ·Exp / Exp ,.]
[Exp --> ·Exp logop Exp ,.]
[Exp --> ·Exp bitop Exp ,.]
[Exp --> ·( Exp ) ,.]
[Exp --> ·- Exp ,.]
[Exp --> ·! Exp ,.]
[Exp --> ·id ( Args ) ,.]
[Exp --> ·id ( ) ,.]
[Exp --> ·Exp [ Exp ] ,.]
[Exp --> ·Exp . id ,.]
[Exp --> ·id ,.]
[Exp --> ·int ,.]
[Exp --> ·float ,.]
----------------------
项目集I61
大小：209

[Exp --> ! ·Exp ,;]
[Exp --> ! ·Exp ,=]
[Exp --> ! ·Exp ,relop]
[Exp --> ! ·Exp ,+]
[Exp --> ! ·Exp ,-]
[Exp --> ! ·Exp ,*]
[Exp --> ! ·Exp ,/]
[Exp --> ! ·Exp ,logop]
[Exp --> ! ·Exp ,bitop]
[Exp --> ! ·Exp ,[]
[Exp --> ! ·Exp ,.]
[Exp --> ·Exp = Exp ,;]
[Exp --> ·Exp relop Exp ,;]
[Exp --> ·Exp + Exp ,;]
[Exp --> ·Exp - Exp ,;]
[Exp --> ·Exp * Exp ,;]
[Exp --> ·Exp / Exp ,;]
[Exp --> ·Exp logop Exp ,;]
[Exp --> ·Exp bitop Exp ,;]
[Exp --> ·( Exp ) ,;]
[Exp --> ·- Exp ,;]
[Exp --> ·! Exp ,;]
[Exp --> ·id ( Args ) ,;]
[Exp --> ·id ( ) ,;]
[Exp --> ·Exp [ Exp ] ,;]
[Exp --> ·Exp . id ,;]
[Exp --> ·id ,;]
[Exp --> ·int ,;]
[Exp --> ·float ,;]
[Exp --> ·Exp = Exp ,=]
[Exp --> ·Exp relop Exp ,=]
[Exp --> ·Exp + Exp ,=]
[Exp --> ·Exp - Exp ,=]
[Exp --> ·Exp * Exp ,=]
[Exp --> ·Exp / Exp ,=]
[Exp --> ·Exp logop Exp ,=]
[Exp --> ·Exp bitop Exp ,=]
[Exp --> ·( Exp ) ,=]
[Exp --> ·- Exp ,=]
[Exp --> ·! Exp ,=]
[Exp --> ·id ( Args ) ,=]
[Exp --> ·id ( ) ,=]
[Exp --> ·Exp [ Exp ] ,=]
[Exp --> ·Exp . id ,=]
[Exp --> ·id ,=]
[Exp --> ·int ,=]
[Exp --> ·float ,=]
[Exp --> ·Exp = Exp ,relop]
[Exp --> ·Exp relop Exp ,relop]
[Exp --> ·Exp + Exp ,relop]
[Exp --> ·Exp - Exp ,relop]
[Exp --> ·Exp * Exp ,relop]
[Exp --> ·Exp / Exp ,relop]
[Exp --> ·Exp logop Exp ,relop]
[Exp --> ·Exp bitop Exp ,relop]
[Exp --> ·( Exp ) ,relop]
[Exp --> ·- Exp ,relop]
[Exp --> ·! Exp ,relop]
[Exp --> ·id ( Args ) ,relop]
[Exp --> ·id ( ) ,relop]
[Exp --> ·Exp [ Exp ] ,relop]
[Exp --> ·Exp . id ,relop]
[Exp --> ·id ,relop]
[Exp --> ·int ,relop]
[Exp --> ·float ,relop]
[Exp --> ·Exp = Exp ,+]
[Exp --> ·Exp relop Exp ,+]
[Exp --> ·Exp + Exp ,+]
[Exp --> ·Exp - Exp ,+]
[Exp --> ·Exp * Exp ,+]
[Exp --> ·Exp / Exp ,+]
[Exp --> ·Exp logop Exp ,+]
[Exp --> ·Exp bitop Exp ,+]
[Exp --> ·( Exp ) ,+]
[Exp --> ·- Exp ,+]
[Exp --> ·! Exp ,+]
[Exp --> ·id ( Args ) ,+]
[Exp --> ·id ( ) ,+]
[Exp --> ·Exp [ Exp ] ,+]
[Exp --> ·Exp . id ,+]
[Exp --> ·id ,+]
[Exp --> ·int ,+]
[Exp --> ·float ,+]
[Exp --> ·Exp = Exp ,-]
[Exp --> ·Exp relop Exp ,-]
[Exp --> ·Exp + Exp ,-]
[Exp --> ·Exp - Exp ,-]
[Exp --> ·Exp * Exp ,-]
[Exp --> ·Exp / Exp ,-]
[Exp --> ·Exp logop Exp ,-]
[Exp --> ·Exp bitop Exp ,-]
[Exp --> ·( Exp ) ,-]
[Exp --> ·- Exp ,-]
[Exp --> ·! Exp ,-]
[Exp --> ·id ( Args ) ,-]
[Exp --> ·id ( ) ,-]
[Exp --> ·Exp [ Exp ] ,-]
[Exp --> ·Exp . id ,-]
[Exp --> ·id ,-]
[Exp --> ·int ,-]
[Exp --> ·float ,-]
[Exp --> ·Exp = Exp ,*]
[Exp --> ·Exp relop Exp ,*]
[Exp --> ·Exp + Exp ,*]
[Exp --> ·Exp - Exp ,*]
[Exp --> ·Exp * Exp ,*]
[Exp --> ·Exp / Exp ,*]
[Exp --> ·Exp logop Exp ,*]
[Exp --> ·Exp bitop Exp ,*]
[Exp --> ·( Exp ) ,*]
[Exp --> ·- Exp ,*]
[Exp --> ·! Exp ,*]
[Exp --> ·id ( Args ) ,*]
[Exp --> ·id ( ) ,*]
[Exp --> ·Exp [ Exp ] ,*]
[Exp --> ·Exp . id ,*]
[Exp --> ·id ,*]
[Exp --> ·int ,*]
[Exp --> ·float ,*]
[Exp --> ·Exp = Exp ,/]
[Exp --> ·Exp relop Exp ,/]
[Exp --> ·Exp + Exp ,/]
[Exp --> ·Exp - Exp ,/]
[Exp --> ·Exp * Exp ,/]
[Exp --> ·Exp / Exp ,/]
[Exp --> ·Exp logop Exp ,/]
[Exp --> ·Exp bitop Exp ,/]
[Exp --> ·( Exp ) ,/]
[Exp --> ·- Exp ,/]
[Exp --> ·! Exp ,/]
[Exp --> ·id ( Args ) ,/]
[Exp --> ·id ( ) ,/]
[Exp --> ·Exp [ Exp ] ,/]
[Exp --> ·Exp . id ,/]
[Exp --> ·id ,/]
[Exp --> ·int ,/]
[Exp --> ·float ,/]
[Exp --> ·Exp = Exp ,logop]
[Exp --> ·Exp relop Exp ,logop]
[Exp --> ·Exp + Exp ,logop]
[Exp --> ·Exp - Exp ,logop]
[Exp --> ·Exp * Exp ,logop]
[Exp --> ·Exp / Exp ,logop]
[Exp --> ·Exp logop Exp ,logop]
[Exp --> ·Exp bitop Exp ,logop]
[Exp --> ·( Exp ) ,logop]
[Exp --> ·- Exp ,logop]
[Exp --> ·! Exp ,logop]
[Exp --> ·id ( Args ) ,logop]
[Exp --> ·id ( ) ,logop]
[Exp --> ·Exp [ Exp ] ,logop]
[Exp --> ·Exp . id ,logop]
[Exp --> ·id ,logop]
[Exp --> ·int ,logop]
[Exp --> ·float ,logop]
[Exp --> ·Exp = Exp ,bitop]
[Exp --> ·Exp relop Exp ,bitop]
[Exp --> ·Exp + Exp ,bitop]
[Exp --> ·Exp - Exp ,bitop]
[Exp --> ·Exp * Exp ,bitop]
[Exp --> ·Exp / Exp ,bitop]
[Exp --> ·Exp logop Exp ,bitop]
[Exp --> ·Exp bitop Exp ,bitop]
[Exp --> ·( Exp ) ,bitop]
[Exp --> ·- Exp ,bitop]
[Exp --> ·! Exp ,bitop]
[Exp --> ·id ( Args ) ,bitop]
[Exp --> ·id ( ) ,bitop]
[Exp --> ·Exp [ Exp ] ,bitop]
[Exp --> ·Exp . id ,bitop]
[Exp --> ·id ,bitop]
[Exp --> ·int ,bitop]
[Exp --> ·float ,bitop]
[Exp --> ·Exp = Exp ,[]
[Exp --> ·Exp relop Exp ,[]
[Exp --> ·Exp + Exp ,[]
[Exp --> ·Exp - Exp ,[]
[Exp --> ·Exp * Exp ,[]
[Exp --> ·Exp / Exp ,[]
[Exp --> ·Exp logop Exp ,[]
[Exp --> ·Exp bitop Exp ,[]
[Exp --> ·( Exp ) ,[]
[Exp --> ·- Exp ,[]
[Exp --> ·! Exp ,[]
[Exp --> ·id ( Args ) ,[]
[Exp --> ·id ( ) ,[]
[Exp --> ·Exp [ Exp ] ,[]
[Exp --> ·Exp . id ,[]
[Exp --> ·id ,[]
[Exp --> ·int ,[]
[Exp --> ·float ,[]
[Exp --> ·Exp = Exp ,.]
[Exp --> ·Exp relop Exp ,.]
[Exp --> ·Exp + Exp ,.]
[Exp --> ·Exp - Exp ,.]
[Exp --> ·Exp * Exp ,.]
[Exp --> ·Exp / Exp ,.]
[Exp --> ·Exp logop Exp ,.]
[Exp --> ·Exp bitop Exp ,.]
[Exp --> ·( Exp ) ,.]
[Exp --> ·- Exp ,.]
[Exp --> ·! Exp ,.]
[Exp --> ·id ( Args ) ,.]
[Exp --> ·id ( ) ,.]
[Exp --> ·Exp [ Exp ] ,.]
[Exp --> ·Exp . id ,.]
[Exp --> ·id ,.]
[Exp --> ·int ,.]
[Exp --> ·float ,.]
----------------------
项目集I62
大小：209

[Exp --> ( ·Exp ) ,;]
[Exp --> ( ·Exp ) ,=]
[Exp --> ( ·Exp ) ,relop]
[Exp --> ( ·Exp ) ,+]
[Exp --> ( ·Exp ) ,-]
[Exp --> ( ·Exp ) ,*]
[Exp --> ( ·Exp ) ,/]
[Exp --> ( ·Exp ) ,logop]
[Exp --> ( ·Exp ) ,bitop]
[Exp --> ( ·Exp ) ,[]
[Exp --> ( ·Exp ) ,.]
[Exp --> ·Exp = Exp ,)]
[Exp --> ·Exp relop Exp ,)]
[Exp --> ·Exp + Exp ,)]
[Exp --> ·Exp - Exp ,)]
[Exp --> ·Exp * Exp ,)]
[Exp --> ·Exp / Exp ,)]
[Exp --> ·Exp logop Exp ,)]
[Exp --> ·Exp bitop Exp ,)]
[Exp --> ·( Exp ) ,)]
[Exp --> ·- Exp ,)]
[Exp --> ·! Exp ,)]
[Exp --> ·id ( Args ) ,)]
[Exp --> ·id ( ) ,)]
[Exp --> ·Exp [ Exp ] ,)]
[Exp --> ·Exp . id ,)]
[Exp --> ·id ,)]
[Exp --> ·int ,)]
[Exp --> ·float ,)]
[Exp --> ·Exp = Exp ,=]
[Exp --> ·Exp relop Exp ,=]
[Exp --> ·Exp + Exp ,=]
[Exp --> ·Exp - Exp ,=]
[Exp --> ·Exp * Exp ,=]
[Exp --> ·Exp / Exp ,=]
[Exp --> ·Exp logop Exp ,=]
[Exp --> ·Exp bitop Exp ,=]
[Exp --> ·( Exp ) ,=]
[Exp --> ·- Exp ,=]
[Exp --> ·! Exp ,=]
[Exp --> ·id ( Args ) ,=]
[Exp --> ·id ( ) ,=]
[Exp --> ·Exp [ Exp ] ,=]
[Exp --> ·Exp . id ,=]
[Exp --> ·id ,=]
[Exp --> ·int ,=]
[Exp --> ·float ,=]
[Exp --> ·Exp = Exp ,relop]
[Exp --> ·Exp relop Exp ,relop]
[Exp --> ·Exp + Exp ,relop]
[Exp --> ·Exp - Exp ,relop]
[Exp --> ·Exp * Exp ,relop]
[Exp --> ·Exp / Exp ,relop]
[Exp --> ·Exp logop Exp ,relop]
[Exp --> ·Exp bitop Exp ,relop]
[Exp --> ·( Exp ) ,relop]
[Exp --> ·- Exp ,relop]
[Exp --> ·! Exp ,relop]
[Exp --> ·id ( Args ) ,relop]
[Exp --> ·id ( ) ,relop]
[Exp --> ·Exp [ Exp ] ,relop]
[Exp --> ·Exp . id ,relop]
[Exp --> ·id ,relop]
[Exp --> ·int ,relop]
[Exp --> ·float ,relop]
[Exp --> ·Exp = Exp ,+]
[Exp --> ·Exp relop Exp ,+]
[Exp --> ·Exp + Exp ,+]
[Exp --> ·Exp - Exp ,+]
[Exp --> ·Exp * Exp ,+]
[Exp --> ·Exp / Exp ,+]
[Exp --> ·Exp logop Exp ,+]
[Exp --> ·Exp bitop Exp ,+]
[Exp --> ·( Exp ) ,+]
[Exp --> ·- Exp ,+]
[Exp --> ·! Exp ,+]
[Exp --> ·id ( Args ) ,+]
[Exp --> ·id ( ) ,+]
[Exp --> ·Exp [ Exp ] ,+]
[Exp --> ·Exp . id ,+]
[Exp --> ·id ,+]
[Exp --> ·int ,+]
[Exp --> ·float ,+]
[Exp --> ·Exp = Exp ,-]
[Exp --> ·Exp relop Exp ,-]
[Exp --> ·Exp + Exp ,-]
[Exp --> ·Exp - Exp ,-]
[Exp --> ·Exp * Exp ,-]
[Exp --> ·Exp / Exp ,-]
[Exp --> ·Exp logop Exp ,-]
[Exp --> ·Exp bitop Exp ,-]
[Exp --> ·( Exp ) ,-]
[Exp --> ·- Exp ,-]
[Exp --> ·! Exp ,-]
[Exp --> ·id ( Args ) ,-]
[Exp --> ·id ( ) ,-]
[Exp --> ·Exp [ Exp ] ,-]
[Exp --> ·Exp . id ,-]
[Exp --> ·id ,-]
[Exp --> ·int ,-]
[Exp --> ·float ,-]
[Exp --> ·Exp = Exp ,*]
[Exp --> ·Exp relop Exp ,*]
[Exp --> ·Exp + Exp ,*]
[Exp --> ·Exp - Exp ,*]
[Exp --> ·Exp * Exp ,*]
[Exp --> ·Exp / Exp ,*]
[Exp --> ·Exp logop Exp ,*]
[Exp --> ·Exp bitop Exp ,*]
[Exp --> ·( Exp ) ,*]
[Exp --> ·- Exp ,*]
[Exp --> ·! Exp ,*]
[Exp --> ·id ( Args ) ,*]
[Exp --> ·id ( ) ,*]
[Exp --> ·Exp [ Exp ] ,*]
[Exp --> ·Exp . id ,*]
[Exp --> ·id ,*]
[Exp --> ·int ,*]
[Exp --> ·float ,*]
[Exp --> ·Exp = Exp ,/]
[Exp --> ·Exp relop Exp ,/]
[Exp --> ·Exp + Exp ,/]
[Exp --> ·Exp - Exp ,/]
[Exp --> ·Exp * Exp ,/]
[Exp --> ·Exp / Exp ,/]
[Exp --> ·Exp logop Exp ,/]
[Exp --> ·Exp bitop Exp ,/]
[Exp --> ·( Exp ) ,/]
[Exp --> ·- Exp ,/]
[Exp --> ·! Exp ,/]
[Exp --> ·id ( Args ) ,/]
[Exp --> ·id ( ) ,/]
[Exp --> ·Exp [ Exp ] ,/]
[Exp --> ·Exp . id ,/]
[Exp --> ·id ,/]
[Exp --> ·int ,/]
[Exp --> ·float ,/]
[Exp --> ·Exp = Exp ,logop]
[Exp --> ·Exp relop Exp ,logop]
[Exp --> ·Exp + Exp ,logop]
[Exp --> ·Exp - Exp ,logop]
[Exp --> ·Exp * Exp ,logop]
[Exp --> ·Exp / Exp ,logop]
[Exp --> ·Exp logop Exp ,logop]
[Exp --> ·Exp bitop Exp ,logop]
[Exp --> ·( Exp ) ,logop]
[Exp --> ·- Exp ,logop]
[Exp --> ·! Exp ,logop]
[Exp --> ·id ( Args ) ,logop]
[Exp --> ·id ( ) ,logop]
[Exp --> ·Exp [ Exp ] ,logop]
[Exp --> ·Exp . id ,logop]
[Exp --> ·id ,logop]
[Exp --> ·int ,logop]
[Exp --> ·float ,logop]
[Exp --> ·Exp = Exp ,bitop]
[Exp --> ·Exp relop Exp ,bitop]
[Exp --> ·Exp + Exp ,bitop]
[Exp --> ·Exp - Exp ,bitop]
[Exp --> ·Exp * Exp ,bitop]
[Exp --> ·Exp / Exp ,bitop]
[Exp --> ·Exp logop Exp ,bitop]
[Exp --> ·Exp bitop Exp ,bitop]
[Exp --> ·( Exp ) ,bitop]
[Exp --> ·- Exp ,bitop]
[Exp --> ·! Exp ,bitop]
[Exp --> ·id ( Args ) ,bitop]
[Exp --> ·id ( ) ,bitop]
[Exp --> ·Exp [ Exp ] ,bitop]
[Exp --> ·Exp . id ,bitop]
[Exp --> ·id ,bitop]
[Exp --> ·int ,bitop]
[Exp --> ·float ,bitop]
[Exp --> ·Exp = Exp ,[]
[Exp --> ·Exp relop Exp ,[]
[Exp --> ·Exp + Exp ,[]
[Exp --> ·Exp - Exp ,[]
[Exp --> ·Exp * Exp ,[]
[Exp --> ·Exp / Exp ,[]
[Exp --> ·Exp logop Exp ,[]
[Exp --> ·Exp bitop Exp ,[]
[Exp --> ·( Exp ) ,[]
[Exp --> ·- Exp ,[]
[Exp --> ·! Exp ,[]
[Exp --> ·id ( Args ) ,[]
[Exp --> ·id ( ) ,[]
[Exp --> ·Exp [ Exp ] ,[]
[Exp --> ·Exp . id ,[]
[Exp --> ·id ,[]
[Exp --> ·int ,[]
[Exp --> ·float ,[]
[Exp --> ·Exp = Exp ,.]
[Exp --> ·Exp relop Exp ,.]
[Exp --> ·Exp + Exp ,.]
[Exp --> ·Exp - Exp ,.]
[Exp --> ·Exp * Exp ,.]
[Exp --> ·Exp / Exp ,.]
[Exp --> ·Exp logop Exp ,.]
[Exp --> ·Exp bitop Exp ,.]
[Exp --> ·( Exp ) ,.]
[Exp --> ·- Exp ,.]
[Exp --> ·! Exp ,.]
[Exp --> ·id ( Args ) ,.]
[Exp --> ·id ( ) ,.]
[Exp --> ·Exp [ Exp ] ,.]
[Exp --> ·Exp . id ,.]
[Exp --> ·id ,.]
[Exp --> ·int ,.]
[Exp --> ·float ,.]
----------------------
项目集I63
大小：51

[CompSt --> { ·DefList StmtList } ,int]
[CompSt --> { ·DefList StmtList } ,float]
[CompSt --> { ·DefList StmtList } ,id]
[CompSt --> { ·DefList StmtList } ,-]
[CompSt --> { ·DefList StmtList } ,!]
[CompSt --> { ·DefList StmtList } ,(]
[CompSt --> { ·DefList StmtList } ,{]
[CompSt --> { ·DefList StmtList } ,}]
[CompSt --> { ·DefList StmtList } ,if]
[CompSt --> { ·DefList StmtList } ,while]
[CompSt --> { ·DefList StmtList } ,return]
[DefList --> ·Def DefList ,int]
[DefList --> ·Def DefList ,float]
[DefList --> ·Def DefList ,id]
[DefList --> ·Def DefList ,-]
[DefList --> ·Def DefList ,!]
[DefList --> ·Def DefList ,(]
[DefList --> ·Def DefList ,{]
[DefList --> ·Def DefList ,}]
[DefList --> ·Def DefList ,if]
[DefList --> ·Def DefList ,while]
[DefList --> ·Def DefList ,return]
[DefList --> ·EPSILON ,int]
[DefList --> ·EPSILON ,float]
[DefList --> ·EPSILON ,id]
[DefList --> ·EPSILON ,-]
[DefList --> ·EPSILON ,!]
[DefList --> ·EPSILON ,(]
[DefList --> ·EPSILON ,{]
[DefList --> ·EPSILON ,}]
[DefList --> ·EPSILON ,if]
[DefList --> ·EPSILON ,while]
[DefList --> ·EPSILON ,return]
[Def --> ·Specifier DecList ; ,int]
[Def --> ·Specifier DecList ; ,float]
[Def --> ·Specifier DecList ; ,struct]
[Def --> ·Specifier DecList ; ,id]
[Def --> ·Specifier DecList ; ,-]
[Def --> ·Specifier DecList ; ,!]
[Def --> ·Specifier DecList ; ,(]
[Def --> ·Specifier DecList ; ,{]
[Def --> ·Specifier DecList ; ,}]
[Def --> ·Specifier DecList ; ,if]
[Def --> ·Specifier DecList ; ,while]
[Def --> ·Specifier DecList ; ,return]
[Specifier --> ·TYPE ,id]
[Specifier --> ·StructSpecifier ,id]
[TYPE --> ·int ,id]
[TYPE --> ·float ,id]
[StructSpecifier --> ·struct OptTag { DefList } ,id]
[StructSpecifier --> ·struct Tag ,id]
----------------------
项目集I64
大小：22

[Stmt --> if ·( Exp ) Stmt ,int]
[Stmt --> if ·( Exp ) Stmt ,float]
[Stmt --> if ·( Exp ) Stmt ,id]
[Stmt --> if ·( Exp ) Stmt ,-]
[Stmt --> if ·( Exp ) Stmt ,!]
[Stmt --> if ·( Exp ) Stmt ,(]
[Stmt --> if ·( Exp ) Stmt ,{]
[Stmt --> if ·( Exp ) Stmt ,}]
[Stmt --> if ·( Exp ) Stmt ,if]
[Stmt --> if ·( Exp ) Stmt ,while]
[Stmt --> if ·( Exp ) Stmt ,return]
[Stmt --> if ·( Exp ) Stmt else Stmt ,int]
[Stmt --> if ·( Exp ) Stmt else Stmt ,float]
[Stmt --> if ·( Exp ) Stmt else Stmt ,id]
[Stmt --> if ·( Exp ) Stmt else Stmt ,-]
[Stmt --> if ·( Exp ) Stmt else Stmt ,!]
[Stmt --> if ·( Exp ) Stmt else Stmt ,(]
[Stmt --> if ·( Exp ) Stmt else Stmt ,{]
[Stmt --> if ·( Exp ) Stmt else Stmt ,}]
[Stmt --> if ·( Exp ) Stmt else Stmt ,if]
[Stmt --> if ·( Exp ) Stmt else Stmt ,while]
[Stmt --> if ·( Exp ) Stmt else Stmt ,return]
----------------------
项目集I65
大小：11

[Stmt --> while ·( Exp ) Stmt ,int]
[Stmt --> while ·( Exp ) Stmt ,float]
[Stmt --> while ·( Exp ) Stmt ,id]
[Stmt --> while ·( Exp ) Stmt ,-]
[Stmt --> while ·( Exp ) Stmt ,!]
[Stmt --> while ·( Exp ) Stmt ,(]
[Stmt --> while ·( Exp ) Stmt ,{]
[Stmt --> while ·( Exp ) Stmt ,}]
[Stmt --> while ·( Exp ) Stmt ,if]
[Stmt --> while ·( Exp ) Stmt ,while]
[Stmt --> while ·( Exp ) Stmt ,return]
----------------------
项目集I66
大小：209

[Stmt --> return ·Exp ; ,int]
[Stmt --> return ·Exp ; ,float]
[Stmt --> return ·Exp ; ,id]
[Stmt --> return ·Exp ; ,-]
[Stmt --> return ·Exp ; ,!]
[Stmt --> return ·Exp ; ,(]
[Stmt --> return ·Exp ; ,{]
[Stmt --> return ·Exp ; ,}]
[Stmt --> return ·Exp ; ,if]
[Stmt --> return ·Exp ; ,while]
[Stmt --> return ·Exp ; ,return]
[Exp --> ·Exp = Exp ,;]
[Exp --> ·Exp relop Exp ,;]
[Exp --> ·Exp + Exp ,;]
[Exp --> ·Exp - Exp ,;]
[Exp --> ·Exp * Exp ,;]
[Exp --> ·Exp / Exp ,;]
[Exp --> ·Exp logop Exp ,;]
[Exp --> ·Exp bitop Exp ,;]
[Exp --> ·( Exp ) ,;]
[Exp --> ·- Exp ,;]
[Exp --> ·! Exp ,;]
[Exp --> ·id ( Args ) ,;]
[Exp --> ·id ( ) ,;]
[Exp --> ·Exp [ Exp ] ,;]
[Exp --> ·Exp . id ,;]
[Exp --> ·id ,;]
[Exp --> ·int ,;]
[Exp --> ·float ,;]
[Exp --> ·Exp = Exp ,=]
[Exp --> ·Exp relop Exp ,=]
[Exp --> ·Exp + Exp ,=]
[Exp --> ·Exp - Exp ,=]
[Exp --> ·Exp * Exp ,=]
[Exp --> ·Exp / Exp ,=]
[Exp --> ·Exp logop Exp ,=]
[Exp --> ·Exp bitop Exp ,=]
[Exp --> ·( Exp ) ,=]
[Exp --> ·- Exp ,=]
[Exp --> ·! Exp ,=]
[Exp --> ·id ( Args ) ,=]
[Exp --> ·id ( ) ,=]
[Exp --> ·Exp [ Exp ] ,=]
[Exp --> ·Exp . id ,=]
[Exp --> ·id ,=]
[Exp --> ·int ,=]
[Exp --> ·float ,=]
[Exp --> ·Exp = Exp ,relop]
[Exp --> ·Exp relop Exp ,relop]
[Exp --> ·Exp + Exp ,relop]
[Exp --> ·Exp - Exp ,relop]
[Exp --> ·Exp * Exp ,relop]
[Exp --> ·Exp / Exp ,relop]
[Exp --> ·Exp logop Exp ,relop]
[Exp --> ·Exp bitop Exp ,relop]
[Exp --> ·( Exp ) ,relop]
[Exp --> ·- Exp ,relop]
[Exp --> ·! Exp ,relop]
[Exp --> ·id ( Args ) ,relop]
[Exp --> ·id ( ) ,relop]
[Exp --> ·Exp [ Exp ] ,relop]
[Exp --> ·Exp . id ,relop]
[Exp --> ·id ,relop]
[Exp --> ·int ,relop]
[Exp --> ·float ,relop]
[Exp --> ·Exp = Exp ,+]
[Exp --> ·Exp relop Exp ,+]
[Exp --> ·Exp + Exp ,+]
[Exp --> ·Exp - Exp ,+]
[Exp --> ·Exp * Exp ,+]
[Exp --> ·Exp / Exp ,+]
[Exp --> ·Exp logop Exp ,+]
[Exp --> ·Exp bitop Exp ,+]
[Exp --> ·( Exp ) ,+]
[Exp --> ·- Exp ,+]
[Exp --> ·! Exp ,+]
[Exp --> ·id ( Args ) ,+]
[Exp --> ·id ( ) ,+]
[Exp --> ·Exp [ Exp ] ,+]
[Exp --> ·Exp . id ,+]
[Exp --> ·id ,+]
[Exp --> ·int ,+]
[Exp --> ·float ,+]
[Exp --> ·Exp = Exp ,-]
[Exp --> ·Exp relop Exp ,-]
[Exp --> ·Exp + Exp ,-]
[Exp --> ·Exp - Exp ,-]
[Exp --> ·Exp * Exp ,-]
[Exp --> ·Exp / Exp ,-]
[Exp --> ·Exp logop Exp ,-]
[Exp --> ·Exp bitop Exp ,-]
[Exp --> ·( Exp ) ,-]
[Exp --> ·- Exp ,-]
[Exp --> ·! Exp ,-]
[Exp --> ·id ( Args ) ,-]
[Exp --> ·id ( ) ,-]
[Exp --> ·Exp [ Exp ] ,-]
[Exp --> ·Exp . id ,-]
[Exp --> ·id ,-]
[Exp --> ·int ,-]
[Exp --> ·float ,-]
[Exp --> ·Exp = Exp ,*]
[Exp --> ·Exp relop Exp ,*]
[Exp --> ·Exp + Exp ,*]
[Exp --> ·Exp - Exp ,*]
[Exp --> ·Exp * Exp ,*]
[Exp --> ·Exp / Exp ,*]
[Exp --> ·Exp logop Exp ,*]
[Exp --> ·Exp bitop Exp ,*]
[Exp --> ·( Exp ) ,*]
[Exp --> ·- Exp ,*]
[Exp --> ·! Exp ,*]
[Exp --> ·id ( Args ) ,*]
[Exp --> ·id ( ) ,*]
[Exp --> ·Exp [ Exp ] ,*]
[Exp --> ·Exp . id ,*]
[Exp --> ·id ,*]
[Exp --> ·int ,*]
[Exp --> ·float ,*]
[Exp --> ·Exp = Exp ,/]
[Exp --> ·Exp relop Exp ,/]
[Exp --> ·Exp + Exp ,/]
[Exp --> ·Exp - Exp ,/]
[Exp --> ·Exp * Exp ,/]
[Exp --> ·Exp / Exp ,/]
[Exp --> ·Exp logop Exp ,/]
[Exp --> ·Exp bitop Exp ,/]
[Exp --> ·( Exp ) ,/]
[Exp --> ·- Exp ,/]
[Exp --> ·! Exp ,/]
[Exp --> ·id ( Args ) ,/]
[Exp --> ·id ( ) ,/]
[Exp --> ·Exp [ Exp ] ,/]
[Exp --> ·Exp . id ,/]
[Exp --> ·id ,/]
[Exp --> ·int ,/]
[Exp --> ·float ,/]
[Exp --> ·Exp = Exp ,logop]
[Exp --> ·Exp relop Exp ,logop]
[Exp --> ·Exp + Exp ,logop]
[Exp --> ·Exp - Exp ,logop]
[Exp --> ·Exp * Exp ,logop]
[Exp --> ·Exp / Exp ,logop]
[Exp --> ·Exp logop Exp ,logop]
[Exp --> ·Exp bitop Exp ,logop]
[Exp --> ·( Exp ) ,logop]
[Exp --> ·- Exp ,logop]
[Exp --> ·! Exp ,logop]
[Exp --> ·id ( Args ) ,logop]
[Exp --> ·id ( ) ,logop]
[Exp --> ·Exp [ Exp ] ,logop]
[Exp --> ·Exp . id ,logop]
[Exp --> ·id ,logop]
[Exp --> ·int ,logop]
[Exp --> ·float ,logop]
[Exp --> ·Exp = Exp ,bitop]
[Exp --> ·Exp relop Exp ,bitop]
[Exp --> ·Exp + Exp ,bitop]
[Exp --> ·Exp - Exp ,bitop]
[Exp --> ·Exp * Exp ,bitop]
[Exp --> ·Exp / Exp ,bitop]
[Exp --> ·Exp logop Exp ,bitop]
[Exp --> ·Exp bitop Exp ,bitop]
[Exp --> ·( Exp ) ,bitop]
[Exp --> ·- Exp ,bitop]
[Exp --> ·! Exp ,bitop]
[Exp --> ·id ( Args ) ,bitop]
[Exp --> ·id ( ) ,bitop]
[Exp --> ·Exp [ Exp ] ,bitop]
[Exp --> ·Exp . id ,bitop]
[Exp --> ·id ,bitop]
[Exp --> ·int ,bitop]
[Exp --> ·float ,bitop]
[Exp --> ·Exp = Exp ,[]
[Exp --> ·Exp relop Exp ,[]
[Exp --> ·Exp + Exp ,[]
[Exp --> ·Exp - Exp ,[]
[Exp --> ·Exp * Exp ,[]
[Exp --> ·Exp / Exp ,[]
[Exp --> ·Exp logop Exp ,[]
[Exp --> ·Exp bitop Exp ,[]
[Exp --> ·( Exp ) ,[]
[Exp --> ·- Exp